import e from"./python-version-check.7d913bae.js";import{StringDecoder as t}from"string_decoder";var r=globalThis,n={},o={},i=r.parcelRequire5a65;null==i&&((i=function(e){if(e in n)return n[e].exports;if(e in o){var t=o[e];delete o[e];var r={id:e,exports:{}};return n[e]=r,t.call(r.exports,r,r.exports),r.exports}var i=Error("Cannot find module '"+e+"'");throw i.code="MODULE_NOT_FOUND",i}).register=function(e,t){o[e]=t},r.parcelRequire5a65=i),(0,i.register)("ejdSq",function(r,n){var o=r.exports&&r.exports.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),i=r.exports&&r.exports.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),u=r.exports&&r.exports.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&o(t,e,r);return i(t,e),t},c=r.exports&&r.exports.__awaiter||function(e,t,r,n){return new(r||(r=Promise))(function(o,i){function u(e){try{s(n.next(e))}catch(e){i(e)}}function c(e){try{s(n.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?o(e.value):((t=e.value)instanceof r?t:new r(function(e){e(t)})).then(u,c)}s((n=n.apply(e,t||[])).next())})};Object.defineProperty(r.exports,"__esModule",{value:!0}),r.exports.getExecOutput=r.exports.exec=void 0;let s=u(e);function a(e,t,r){return c(this,void 0,void 0,function*(){let n=s.argStringToArray(e);if(0===n.length)throw Error("Parameter 'commandLine' cannot be null or empty.");let o=n[0];return t=n.slice(1).concat(t||[]),new s.ToolRunner(o,t,r).exec()})}r.exports.exec=a,r.exports.getExecOutput=function(e,r,n){var o,i;return c(this,void 0,void 0,function*(){let u="",c="",s=new t("utf8"),l=new t("utf8"),d=null==(o=null==n?void 0:n.listeners)?void 0:o.stdout,f=null==(i=null==n?void 0:n.listeners)?void 0:i.stderr,p=Object.assign(Object.assign({},null==n?void 0:n.listeners),{stdout:e=>{u+=s.write(e),d&&d(e)},stderr:e=>{c+=l.write(e),f&&f(e)}}),v=yield a(e,r,Object.assign(Object.assign({},n),{listeners:p}));return u+=s.end(),c+=l.end(),{exitCode:v,stdout:u,stderr:c}})}}),i("ejdSq");
//# sourceMappingURL=python-version-check.d99cbe59.js.map
