{"mappings":"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","sources":["<anon>","node_modules/.pnpm/undici@5.29.0/node_modules/undici/lib/cache/cachestorage.js"],"sourcesContent":["import $9tZVA$pythonversioncheck892401fajs from \"./python-version-check.892401fa.js\";\nimport $9tZVA$pythonversioncheck471ed536js from \"./python-version-check.471ed536.js\";\nimport $9tZVA$pythonversioncheck801bb0f1js from \"./python-version-check.801bb0f1.js\";\nimport $9tZVA$pythonversioncheck7ed1514ejs from \"./python-version-check.7ed1514e.js\";\n\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire5a65\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire5a65\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"30TAK\", function(module, exports) {\n'use strict';\n\nvar $231c7e902a1af350$require$kConstruct = $9tZVA$pythonversioncheck892401fajs.kConstruct;\n\nvar $231c7e902a1af350$require$Cache = $9tZVA$pythonversioncheck471ed536js.Cache;\n\nvar $231c7e902a1af350$require$webidl = $9tZVA$pythonversioncheck801bb0f1js.webidl;\n\nvar $231c7e902a1af350$require$kEnumerableProperty = $9tZVA$pythonversioncheck7ed1514ejs.kEnumerableProperty;\nclass $231c7e902a1af350$var$CacheStorage {\n    /**\n   * @see https://w3c.github.io/ServiceWorker/#dfn-relevant-name-to-cache-map\n   * @type {Map<string, import('./cache').requestResponseList}\n   */ #caches = new Map();\n    constructor(){\n        if (arguments[0] !== $231c7e902a1af350$require$kConstruct) $231c7e902a1af350$require$webidl.illegalConstructor();\n    }\n    async match(request, options = {}) {\n        $231c7e902a1af350$require$webidl.brandCheck(this, $231c7e902a1af350$var$CacheStorage);\n        $231c7e902a1af350$require$webidl.argumentLengthCheck(arguments, 1, {\n            header: 'CacheStorage.match'\n        });\n        request = $231c7e902a1af350$require$webidl.converters.RequestInfo(request);\n        options = $231c7e902a1af350$require$webidl.converters.MultiCacheQueryOptions(options);\n        // 1.\n        if (options.cacheName != null) // 1.1.1.1\n        {\n            if (this.#caches.has(options.cacheName)) {\n                // 1.1.1.1.1\n                const cacheList = this.#caches.get(options.cacheName);\n                const cache = new $231c7e902a1af350$require$Cache($231c7e902a1af350$require$kConstruct, cacheList);\n                return await cache.match(request, options);\n            }\n        } else // 2.2\n        for (const cacheList of this.#caches.values()){\n            const cache = new $231c7e902a1af350$require$Cache($231c7e902a1af350$require$kConstruct, cacheList);\n            // 2.2.1.2\n            const response = await cache.match(request, options);\n            if (response !== undefined) return response;\n        }\n    }\n    /**\n   * @see https://w3c.github.io/ServiceWorker/#cache-storage-has\n   * @param {string} cacheName\n   * @returns {Promise<boolean>}\n   */ async has(cacheName) {\n        $231c7e902a1af350$require$webidl.brandCheck(this, $231c7e902a1af350$var$CacheStorage);\n        $231c7e902a1af350$require$webidl.argumentLengthCheck(arguments, 1, {\n            header: 'CacheStorage.has'\n        });\n        cacheName = $231c7e902a1af350$require$webidl.converters.DOMString(cacheName);\n        // 2.1.1\n        // 2.2\n        return this.#caches.has(cacheName);\n    }\n    /**\n   * @see https://w3c.github.io/ServiceWorker/#dom-cachestorage-open\n   * @param {string} cacheName\n   * @returns {Promise<Cache>}\n   */ async open(cacheName) {\n        $231c7e902a1af350$require$webidl.brandCheck(this, $231c7e902a1af350$var$CacheStorage);\n        $231c7e902a1af350$require$webidl.argumentLengthCheck(arguments, 1, {\n            header: 'CacheStorage.open'\n        });\n        cacheName = $231c7e902a1af350$require$webidl.converters.DOMString(cacheName);\n        // 2.1\n        if (this.#caches.has(cacheName)) {\n            // await caches.open('v1') !== await caches.open('v1')\n            // 2.1.1\n            const cache = this.#caches.get(cacheName);\n            // 2.1.1.1\n            return new $231c7e902a1af350$require$Cache($231c7e902a1af350$require$kConstruct, cache);\n        }\n        // 2.2\n        const cache = [];\n        // 2.3\n        this.#caches.set(cacheName, cache);\n        // 2.4\n        return new $231c7e902a1af350$require$Cache($231c7e902a1af350$require$kConstruct, cache);\n    }\n    /**\n   * @see https://w3c.github.io/ServiceWorker/#cache-storage-delete\n   * @param {string} cacheName\n   * @returns {Promise<boolean>}\n   */ async delete(cacheName) {\n        $231c7e902a1af350$require$webidl.brandCheck(this, $231c7e902a1af350$var$CacheStorage);\n        $231c7e902a1af350$require$webidl.argumentLengthCheck(arguments, 1, {\n            header: 'CacheStorage.delete'\n        });\n        cacheName = $231c7e902a1af350$require$webidl.converters.DOMString(cacheName);\n        return this.#caches.delete(cacheName);\n    }\n    /**\n   * @see https://w3c.github.io/ServiceWorker/#cache-storage-keys\n   * @returns {string[]}\n   */ async keys() {\n        $231c7e902a1af350$require$webidl.brandCheck(this, $231c7e902a1af350$var$CacheStorage);\n        // 2.1\n        const keys = this.#caches.keys();\n        // 2.2\n        return [\n            ...keys\n        ];\n    }\n}\nObject.defineProperties($231c7e902a1af350$var$CacheStorage.prototype, {\n    [Symbol.toStringTag]: {\n        value: 'CacheStorage',\n        configurable: true\n    },\n    match: $231c7e902a1af350$require$kEnumerableProperty,\n    has: $231c7e902a1af350$require$kEnumerableProperty,\n    open: $231c7e902a1af350$require$kEnumerableProperty,\n    delete: $231c7e902a1af350$require$kEnumerableProperty,\n    keys: $231c7e902a1af350$require$kEnumerableProperty\n});\nmodule.exports = {\n    CacheStorage: $231c7e902a1af350$var$CacheStorage\n};\n\n});\n\n\nparcelRequire(\"30TAK\");\n\n//# sourceMappingURL=python-version-check.907281b8.js.map\n","'use strict'\n\nconst { kConstruct } = require('./symbols')\nconst { Cache } = require('./cache')\nconst { webidl } = require('../fetch/webidl')\nconst { kEnumerableProperty } = require('../core/util')\n\nclass CacheStorage {\n  /**\n   * @see https://w3c.github.io/ServiceWorker/#dfn-relevant-name-to-cache-map\n   * @type {Map<string, import('./cache').requestResponseList}\n   */\n  #caches = new Map()\n\n  constructor () {\n    if (arguments[0] !== kConstruct) {\n      webidl.illegalConstructor()\n    }\n  }\n\n  async match (request, options = {}) {\n    webidl.brandCheck(this, CacheStorage)\n    webidl.argumentLengthCheck(arguments, 1, { header: 'CacheStorage.match' })\n\n    request = webidl.converters.RequestInfo(request)\n    options = webidl.converters.MultiCacheQueryOptions(options)\n\n    // 1.\n    if (options.cacheName != null) {\n      // 1.1.1.1\n      if (this.#caches.has(options.cacheName)) {\n        // 1.1.1.1.1\n        const cacheList = this.#caches.get(options.cacheName)\n        const cache = new Cache(kConstruct, cacheList)\n\n        return await cache.match(request, options)\n      }\n    } else { // 2.\n      // 2.2\n      for (const cacheList of this.#caches.values()) {\n        const cache = new Cache(kConstruct, cacheList)\n\n        // 2.2.1.2\n        const response = await cache.match(request, options)\n\n        if (response !== undefined) {\n          return response\n        }\n      }\n    }\n  }\n\n  /**\n   * @see https://w3c.github.io/ServiceWorker/#cache-storage-has\n   * @param {string} cacheName\n   * @returns {Promise<boolean>}\n   */\n  async has (cacheName) {\n    webidl.brandCheck(this, CacheStorage)\n    webidl.argumentLengthCheck(arguments, 1, { header: 'CacheStorage.has' })\n\n    cacheName = webidl.converters.DOMString(cacheName)\n\n    // 2.1.1\n    // 2.2\n    return this.#caches.has(cacheName)\n  }\n\n  /**\n   * @see https://w3c.github.io/ServiceWorker/#dom-cachestorage-open\n   * @param {string} cacheName\n   * @returns {Promise<Cache>}\n   */\n  async open (cacheName) {\n    webidl.brandCheck(this, CacheStorage)\n    webidl.argumentLengthCheck(arguments, 1, { header: 'CacheStorage.open' })\n\n    cacheName = webidl.converters.DOMString(cacheName)\n\n    // 2.1\n    if (this.#caches.has(cacheName)) {\n      // await caches.open('v1') !== await caches.open('v1')\n\n      // 2.1.1\n      const cache = this.#caches.get(cacheName)\n\n      // 2.1.1.1\n      return new Cache(kConstruct, cache)\n    }\n\n    // 2.2\n    const cache = []\n\n    // 2.3\n    this.#caches.set(cacheName, cache)\n\n    // 2.4\n    return new Cache(kConstruct, cache)\n  }\n\n  /**\n   * @see https://w3c.github.io/ServiceWorker/#cache-storage-delete\n   * @param {string} cacheName\n   * @returns {Promise<boolean>}\n   */\n  async delete (cacheName) {\n    webidl.brandCheck(this, CacheStorage)\n    webidl.argumentLengthCheck(arguments, 1, { header: 'CacheStorage.delete' })\n\n    cacheName = webidl.converters.DOMString(cacheName)\n\n    return this.#caches.delete(cacheName)\n  }\n\n  /**\n   * @see https://w3c.github.io/ServiceWorker/#cache-storage-keys\n   * @returns {string[]}\n   */\n  async keys () {\n    webidl.brandCheck(this, CacheStorage)\n\n    // 2.1\n    const keys = this.#caches.keys()\n\n    // 2.2\n    return [...keys]\n  }\n}\n\nObject.defineProperties(CacheStorage.prototype, {\n  [Symbol.toStringTag]: {\n    value: 'CacheStorage',\n    configurable: true\n  },\n  match: kEnumerableProperty,\n  has: kEnumerableProperty,\n  open: kEnumerableProperty,\n  delete: kEnumerableProperty,\n  keys: kEnumerableProperty\n})\n\nmodule.exports = {\n  CacheStorage\n}\n"],"names":["$9tZVA$pythonversioncheck892401fajs","$9tZVA$pythonversioncheck471ed536js","$9tZVA$pythonversioncheck801bb0f1js","$9tZVA$pythonversioncheck7ed1514ejs","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$231c7e902a1af350$require$kConstruct","kConstruct","$231c7e902a1af350$require$Cache","Cache","$231c7e902a1af350$require$webidl","webidl","$231c7e902a1af350$require$kEnumerableProperty","kEnumerableProperty","$231c7e902a1af350$var$CacheStorage","Map","arguments","illegalConstructor","match","request","options","brandCheck","argumentLengthCheck","header","converters","RequestInfo","MultiCacheQueryOptions","cacheName","has","cache","get","cacheList","values","response","undefined","DOMString","open","set","delete","keys","Object","defineProperties","prototype","Symbol","toStringTag","value","configurable","CacheStorage"],"version":3,"file":"python-version-check.907281b8.js.map","sourceRoot":"../"}