{"mappings":"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","sources":["<anon>","node_modules/.pnpm/undici@5.29.0/node_modules/undici/lib/dispatcher-base.js"],"sourcesContent":["import $6NItr$pythonversioncheck8a1cf8f2js from \"./python-version-check.8a1cf8f2.js\";\nimport $6NItr$pythonversioncheckdba5a2d4js2 from \"./python-version-check.dba5a2d4.js\";\nimport $6NItr$pythonversioncheckebf2a848js3 from \"./python-version-check.ebf2a848.js\";\n\nvar $a2592f2918a1e776$exports = {};\n'use strict';\n\n\nvar $a2592f2918a1e776$require$ClientDestroyedError = $6NItr$pythonversioncheckdba5a2d4js1.ClientDestroyedError;\nvar $a2592f2918a1e776$require$ClientClosedError = $6NItr$pythonversioncheckdba5a2d4js.ClientClosedError;\nvar $a2592f2918a1e776$require$InvalidArgumentError = $6NItr$pythonversioncheckdba5a2d4js2.InvalidArgumentError;\n\nvar $a2592f2918a1e776$require$kDestroy = $6NItr$pythonversioncheckebf2a848js1.kDestroy;\nvar $a2592f2918a1e776$require$kClose = $6NItr$pythonversioncheckebf2a848js.kClose;\nvar $a2592f2918a1e776$require$kDispatch = $6NItr$pythonversioncheckebf2a848js2.kDispatch;\nvar $a2592f2918a1e776$require$kInterceptors = $6NItr$pythonversioncheckebf2a848js3.kInterceptors;\nconst $a2592f2918a1e776$var$kDestroyed = Symbol('destroyed');\nconst $a2592f2918a1e776$var$kClosed = Symbol('closed');\nconst $a2592f2918a1e776$var$kOnDestroyed = Symbol('onDestroyed');\nconst $a2592f2918a1e776$var$kOnClosed = Symbol('onClosed');\nconst $a2592f2918a1e776$var$kInterceptedDispatch = Symbol('Intercepted Dispatch');\nclass $a2592f2918a1e776$var$DispatcherBase extends $6NItr$pythonversioncheck8a1cf8f2js {\n    constructor(){\n        super();\n        this[$a2592f2918a1e776$var$kDestroyed] = false;\n        this[$a2592f2918a1e776$var$kOnDestroyed] = null;\n        this[$a2592f2918a1e776$var$kClosed] = false;\n        this[$a2592f2918a1e776$var$kOnClosed] = [];\n    }\n    get destroyed() {\n        return this[$a2592f2918a1e776$var$kDestroyed];\n    }\n    get closed() {\n        return this[$a2592f2918a1e776$var$kClosed];\n    }\n    get interceptors() {\n        return this[$a2592f2918a1e776$require$kInterceptors];\n    }\n    set interceptors(newInterceptors) {\n        if (newInterceptors) for(let i = newInterceptors.length - 1; i >= 0; i--){\n            const interceptor = this[$a2592f2918a1e776$require$kInterceptors][i];\n            if (typeof interceptor !== 'function') throw new $a2592f2918a1e776$require$InvalidArgumentError('interceptor must be an function');\n        }\n        this[$a2592f2918a1e776$require$kInterceptors] = newInterceptors;\n    }\n    close(callback) {\n        if (callback === undefined) return new Promise((resolve, reject)=>{\n            this.close((err, data)=>{\n                return err ? reject(err) : resolve(data);\n            });\n        });\n        if (typeof callback !== 'function') throw new $a2592f2918a1e776$require$InvalidArgumentError('invalid callback');\n        if (this[$a2592f2918a1e776$var$kDestroyed]) {\n            queueMicrotask(()=>callback(new $a2592f2918a1e776$require$ClientDestroyedError(), null));\n            return;\n        }\n        if (this[$a2592f2918a1e776$var$kClosed]) {\n            if (this[$a2592f2918a1e776$var$kOnClosed]) this[$a2592f2918a1e776$var$kOnClosed].push(callback);\n            else queueMicrotask(()=>callback(null, null));\n            return;\n        }\n        this[$a2592f2918a1e776$var$kClosed] = true;\n        this[$a2592f2918a1e776$var$kOnClosed].push(callback);\n        const onClosed = ()=>{\n            const callbacks = this[$a2592f2918a1e776$var$kOnClosed];\n            this[$a2592f2918a1e776$var$kOnClosed] = null;\n            for(let i = 0; i < callbacks.length; i++)callbacks[i](null, null);\n        };\n        // Should not error.\n        this[$a2592f2918a1e776$require$kClose]().then(()=>this.destroy()).then(()=>{\n            queueMicrotask(onClosed);\n        });\n    }\n    destroy(err, callback) {\n        if (typeof err === 'function') {\n            callback = err;\n            err = null;\n        }\n        if (callback === undefined) return new Promise((resolve, reject)=>{\n            this.destroy(err, (err, data)=>{\n                return err ? /* istanbul ignore next: should never error */ reject(err) : resolve(data);\n            });\n        });\n        if (typeof callback !== 'function') throw new $a2592f2918a1e776$require$InvalidArgumentError('invalid callback');\n        if (this[$a2592f2918a1e776$var$kDestroyed]) {\n            if (this[$a2592f2918a1e776$var$kOnDestroyed]) this[$a2592f2918a1e776$var$kOnDestroyed].push(callback);\n            else queueMicrotask(()=>callback(null, null));\n            return;\n        }\n        if (!err) err = new $a2592f2918a1e776$require$ClientDestroyedError();\n        this[$a2592f2918a1e776$var$kDestroyed] = true;\n        this[$a2592f2918a1e776$var$kOnDestroyed] = this[$a2592f2918a1e776$var$kOnDestroyed] || [];\n        this[$a2592f2918a1e776$var$kOnDestroyed].push(callback);\n        const onDestroyed = ()=>{\n            const callbacks = this[$a2592f2918a1e776$var$kOnDestroyed];\n            this[$a2592f2918a1e776$var$kOnDestroyed] = null;\n            for(let i = 0; i < callbacks.length; i++)callbacks[i](null, null);\n        };\n        // Should not error.\n        this[$a2592f2918a1e776$require$kDestroy](err).then(()=>{\n            queueMicrotask(onDestroyed);\n        });\n    }\n    [$a2592f2918a1e776$var$kInterceptedDispatch](opts, handler) {\n        if (!this[$a2592f2918a1e776$require$kInterceptors] || this[$a2592f2918a1e776$require$kInterceptors].length === 0) {\n            this[$a2592f2918a1e776$var$kInterceptedDispatch] = this[$a2592f2918a1e776$require$kDispatch];\n            return this[$a2592f2918a1e776$require$kDispatch](opts, handler);\n        }\n        let dispatch = this[$a2592f2918a1e776$require$kDispatch].bind(this);\n        for(let i = this[$a2592f2918a1e776$require$kInterceptors].length - 1; i >= 0; i--)dispatch = this[$a2592f2918a1e776$require$kInterceptors][i](dispatch);\n        this[$a2592f2918a1e776$var$kInterceptedDispatch] = dispatch;\n        return dispatch(opts, handler);\n    }\n    dispatch(opts, handler) {\n        if (!handler || typeof handler !== 'object') throw new $a2592f2918a1e776$require$InvalidArgumentError('handler must be an object');\n        try {\n            if (!opts || typeof opts !== 'object') throw new $a2592f2918a1e776$require$InvalidArgumentError('opts must be an object.');\n            if (this[$a2592f2918a1e776$var$kDestroyed] || this[$a2592f2918a1e776$var$kOnDestroyed]) throw new $a2592f2918a1e776$require$ClientDestroyedError();\n            if (this[$a2592f2918a1e776$var$kClosed]) throw new $a2592f2918a1e776$require$ClientClosedError();\n            return this[$a2592f2918a1e776$var$kInterceptedDispatch](opts, handler);\n        } catch (err) {\n            if (typeof handler.onError !== 'function') throw new $a2592f2918a1e776$require$InvalidArgumentError('invalid onError method');\n            handler.onError(err);\n            return false;\n        }\n    }\n}\n$a2592f2918a1e776$exports = $a2592f2918a1e776$var$DispatcherBase;\n\n\nexport {$a2592f2918a1e776$exports as default};\n//# sourceMappingURL=python-version-check.8185b27f.js.map\n","'use strict'\n\nconst Dispatcher = require('./dispatcher')\nconst {\n  ClientDestroyedError,\n  ClientClosedError,\n  InvalidArgumentError\n} = require('./core/errors')\nconst { kDestroy, kClose, kDispatch, kInterceptors } = require('./core/symbols')\n\nconst kDestroyed = Symbol('destroyed')\nconst kClosed = Symbol('closed')\nconst kOnDestroyed = Symbol('onDestroyed')\nconst kOnClosed = Symbol('onClosed')\nconst kInterceptedDispatch = Symbol('Intercepted Dispatch')\n\nclass DispatcherBase extends Dispatcher {\n  constructor () {\n    super()\n\n    this[kDestroyed] = false\n    this[kOnDestroyed] = null\n    this[kClosed] = false\n    this[kOnClosed] = []\n  }\n\n  get destroyed () {\n    return this[kDestroyed]\n  }\n\n  get closed () {\n    return this[kClosed]\n  }\n\n  get interceptors () {\n    return this[kInterceptors]\n  }\n\n  set interceptors (newInterceptors) {\n    if (newInterceptors) {\n      for (let i = newInterceptors.length - 1; i >= 0; i--) {\n        const interceptor = this[kInterceptors][i]\n        if (typeof interceptor !== 'function') {\n          throw new InvalidArgumentError('interceptor must be an function')\n        }\n      }\n    }\n\n    this[kInterceptors] = newInterceptors\n  }\n\n  close (callback) {\n    if (callback === undefined) {\n      return new Promise((resolve, reject) => {\n        this.close((err, data) => {\n          return err ? reject(err) : resolve(data)\n        })\n      })\n    }\n\n    if (typeof callback !== 'function') {\n      throw new InvalidArgumentError('invalid callback')\n    }\n\n    if (this[kDestroyed]) {\n      queueMicrotask(() => callback(new ClientDestroyedError(), null))\n      return\n    }\n\n    if (this[kClosed]) {\n      if (this[kOnClosed]) {\n        this[kOnClosed].push(callback)\n      } else {\n        queueMicrotask(() => callback(null, null))\n      }\n      return\n    }\n\n    this[kClosed] = true\n    this[kOnClosed].push(callback)\n\n    const onClosed = () => {\n      const callbacks = this[kOnClosed]\n      this[kOnClosed] = null\n      for (let i = 0; i < callbacks.length; i++) {\n        callbacks[i](null, null)\n      }\n    }\n\n    // Should not error.\n    this[kClose]()\n      .then(() => this.destroy())\n      .then(() => {\n        queueMicrotask(onClosed)\n      })\n  }\n\n  destroy (err, callback) {\n    if (typeof err === 'function') {\n      callback = err\n      err = null\n    }\n\n    if (callback === undefined) {\n      return new Promise((resolve, reject) => {\n        this.destroy(err, (err, data) => {\n          return err ? /* istanbul ignore next: should never error */ reject(err) : resolve(data)\n        })\n      })\n    }\n\n    if (typeof callback !== 'function') {\n      throw new InvalidArgumentError('invalid callback')\n    }\n\n    if (this[kDestroyed]) {\n      if (this[kOnDestroyed]) {\n        this[kOnDestroyed].push(callback)\n      } else {\n        queueMicrotask(() => callback(null, null))\n      }\n      return\n    }\n\n    if (!err) {\n      err = new ClientDestroyedError()\n    }\n\n    this[kDestroyed] = true\n    this[kOnDestroyed] = this[kOnDestroyed] || []\n    this[kOnDestroyed].push(callback)\n\n    const onDestroyed = () => {\n      const callbacks = this[kOnDestroyed]\n      this[kOnDestroyed] = null\n      for (let i = 0; i < callbacks.length; i++) {\n        callbacks[i](null, null)\n      }\n    }\n\n    // Should not error.\n    this[kDestroy](err).then(() => {\n      queueMicrotask(onDestroyed)\n    })\n  }\n\n  [kInterceptedDispatch] (opts, handler) {\n    if (!this[kInterceptors] || this[kInterceptors].length === 0) {\n      this[kInterceptedDispatch] = this[kDispatch]\n      return this[kDispatch](opts, handler)\n    }\n\n    let dispatch = this[kDispatch].bind(this)\n    for (let i = this[kInterceptors].length - 1; i >= 0; i--) {\n      dispatch = this[kInterceptors][i](dispatch)\n    }\n    this[kInterceptedDispatch] = dispatch\n    return dispatch(opts, handler)\n  }\n\n  dispatch (opts, handler) {\n    if (!handler || typeof handler !== 'object') {\n      throw new InvalidArgumentError('handler must be an object')\n    }\n\n    try {\n      if (!opts || typeof opts !== 'object') {\n        throw new InvalidArgumentError('opts must be an object.')\n      }\n\n      if (this[kDestroyed] || this[kOnDestroyed]) {\n        throw new ClientDestroyedError()\n      }\n\n      if (this[kClosed]) {\n        throw new ClientClosedError()\n      }\n\n      return this[kInterceptedDispatch](opts, handler)\n    } catch (err) {\n      if (typeof handler.onError !== 'function') {\n        throw new InvalidArgumentError('invalid onError method')\n      }\n\n      handler.onError(err)\n\n      return false\n    }\n  }\n}\n\nmodule.exports = DispatcherBase\n"],"names":["$6NItr$pythonversioncheck8a1cf8f2js","$6NItr$pythonversioncheckdba5a2d4js2","$6NItr$pythonversioncheckebf2a848js3","$a2592f2918a1e776$exports","$a2592f2918a1e776$require$ClientDestroyedError","$6NItr$pythonversioncheckdba5a2d4js1","ClientDestroyedError","$a2592f2918a1e776$require$ClientClosedError","$6NItr$pythonversioncheckdba5a2d4js","ClientClosedError","$a2592f2918a1e776$require$InvalidArgumentError","InvalidArgumentError","$a2592f2918a1e776$require$kDestroy","$6NItr$pythonversioncheckebf2a848js1","kDestroy","$a2592f2918a1e776$require$kClose","$6NItr$pythonversioncheckebf2a848js","kClose","$a2592f2918a1e776$require$kDispatch","$6NItr$pythonversioncheckebf2a848js2","kDispatch","$a2592f2918a1e776$require$kInterceptors","kInterceptors","$a2592f2918a1e776$var$kDestroyed","Symbol","$a2592f2918a1e776$var$kClosed","$a2592f2918a1e776$var$kOnDestroyed","$a2592f2918a1e776$var$kOnClosed","$a2592f2918a1e776$var$kInterceptedDispatch","destroyed","closed","interceptors","newInterceptors","i","length","close","callback","undefined","Promise","resolve","reject","err","data","queueMicrotask","push","onClosed","callbacks","then","destroy","onDestroyed","opts","handler","dispatch","bind","onError","default"],"version":3,"file":"python-version-check.8185b27f.js.map","sourceRoot":"../"}