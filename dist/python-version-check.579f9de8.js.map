{"mappings":"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","sources":["<anon>","node_modules/.pnpm/undici@5.29.0/node_modules/undici/lib/mock/mock-interceptor.js"],"sourcesContent":["import $k7TSY$pythonversioncheck3b10f8a1js2 from \"./python-version-check.3b10f8a1.js\";\nimport $k7TSY$pythonversioncheck32039d93js5 from \"./python-version-check.32039d93.js\";\nimport $k7TSY$pythonversioncheckdba5a2d4js from \"./python-version-check.dba5a2d4.js\";\nimport $k7TSY$pythonversioncheck7ed1514ejs from \"./python-version-check.7ed1514e.js\";\n\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nvar $7033aef23bb2942f$exports = {};\n\n$parcel$export($7033aef23bb2942f$exports, \"MockInterceptor\", () => $7033aef23bb2942f$export$fb1b189d8a131a8b, (v) => $7033aef23bb2942f$export$fb1b189d8a131a8b = v);\nvar $7033aef23bb2942f$export$fb1b189d8a131a8b;\nvar $7033aef23bb2942f$export$61f2724da7650995;\n'use strict';\n\nvar $7033aef23bb2942f$require$getResponseData = $k7TSY$pythonversioncheck3b10f8a1js2.getResponseData;\nvar $7033aef23bb2942f$require$buildKey = $k7TSY$pythonversioncheck3b10f8a1js1.buildKey;\nvar $7033aef23bb2942f$require$addMockDispatch = $k7TSY$pythonversioncheck3b10f8a1js.addMockDispatch;\n\nvar $7033aef23bb2942f$require$kDispatches = $k7TSY$pythonversioncheck32039d93js3.kDispatches;\nvar $7033aef23bb2942f$require$kDispatchKey = $k7TSY$pythonversioncheck32039d93js4.kDispatchKey;\nvar $7033aef23bb2942f$require$kDefaultHeaders = $k7TSY$pythonversioncheck32039d93js1.kDefaultHeaders;\nvar $7033aef23bb2942f$require$kDefaultTrailers = $k7TSY$pythonversioncheck32039d93js2.kDefaultTrailers;\nvar $7033aef23bb2942f$require$kContentLength = $k7TSY$pythonversioncheck32039d93js.kContentLength;\nvar $7033aef23bb2942f$require$kMockDispatch = $k7TSY$pythonversioncheck32039d93js5.kMockDispatch;\n\nvar $7033aef23bb2942f$require$InvalidArgumentError = $k7TSY$pythonversioncheckdba5a2d4js.InvalidArgumentError;\n\nvar $7033aef23bb2942f$require$buildURL = $k7TSY$pythonversioncheck7ed1514ejs.buildURL;\n/**\n * Defines the scope API for an interceptor reply\n */ class $7033aef23bb2942f$var$MockScope {\n    constructor(mockDispatch){\n        this[$7033aef23bb2942f$require$kMockDispatch] = mockDispatch;\n    }\n    /**\n   * Delay a reply by a set amount in ms.\n   */ delay(waitInMs) {\n        if (typeof waitInMs !== 'number' || !Number.isInteger(waitInMs) || waitInMs <= 0) throw new $7033aef23bb2942f$require$InvalidArgumentError('waitInMs must be a valid integer > 0');\n        this[$7033aef23bb2942f$require$kMockDispatch].delay = waitInMs;\n        return this;\n    }\n    /**\n   * For a defined reply, never mark as consumed.\n   */ persist() {\n        this[$7033aef23bb2942f$require$kMockDispatch].persist = true;\n        return this;\n    }\n    /**\n   * Allow one to define a reply for a set amount of matching requests.\n   */ times(repeatTimes) {\n        if (typeof repeatTimes !== 'number' || !Number.isInteger(repeatTimes) || repeatTimes <= 0) throw new $7033aef23bb2942f$require$InvalidArgumentError('repeatTimes must be a valid integer > 0');\n        this[$7033aef23bb2942f$require$kMockDispatch].times = repeatTimes;\n        return this;\n    }\n}\n/**\n * Defines an interceptor for a Mock\n */ class $7033aef23bb2942f$var$MockInterceptor {\n    constructor(opts, mockDispatches){\n        if (typeof opts !== 'object') throw new $7033aef23bb2942f$require$InvalidArgumentError('opts must be an object');\n        if (typeof opts.path === 'undefined') throw new $7033aef23bb2942f$require$InvalidArgumentError('opts.path must be defined');\n        if (typeof opts.method === 'undefined') opts.method = 'GET';\n        // See https://github.com/nodejs/undici/issues/1245\n        // As per RFC 3986, clients are not supposed to send URI\n        // fragments to servers when they retrieve a document,\n        if (typeof opts.path === 'string') {\n            if (opts.query) opts.path = $7033aef23bb2942f$require$buildURL(opts.path, opts.query);\n            else {\n                // Matches https://github.com/nodejs/undici/blob/main/lib/fetch/index.js#L1811\n                const parsedURL = new URL(opts.path, 'data://');\n                opts.path = parsedURL.pathname + parsedURL.search;\n            }\n        }\n        if (typeof opts.method === 'string') opts.method = opts.method.toUpperCase();\n        this[$7033aef23bb2942f$require$kDispatchKey] = $7033aef23bb2942f$require$buildKey(opts);\n        this[$7033aef23bb2942f$require$kDispatches] = mockDispatches;\n        this[$7033aef23bb2942f$require$kDefaultHeaders] = {};\n        this[$7033aef23bb2942f$require$kDefaultTrailers] = {};\n        this[$7033aef23bb2942f$require$kContentLength] = false;\n    }\n    createMockScopeDispatchData(statusCode, data, responseOptions = {}) {\n        const responseData = $7033aef23bb2942f$require$getResponseData(data);\n        const contentLength = this[$7033aef23bb2942f$require$kContentLength] ? {\n            'content-length': responseData.length\n        } : {};\n        const headers = {\n            ...this[$7033aef23bb2942f$require$kDefaultHeaders],\n            ...contentLength,\n            ...responseOptions.headers\n        };\n        const trailers = {\n            ...this[$7033aef23bb2942f$require$kDefaultTrailers],\n            ...responseOptions.trailers\n        };\n        return {\n            statusCode: statusCode,\n            data: data,\n            headers: headers,\n            trailers: trailers\n        };\n    }\n    validateReplyParameters(statusCode, data, responseOptions) {\n        if (typeof statusCode === 'undefined') throw new $7033aef23bb2942f$require$InvalidArgumentError('statusCode must be defined');\n        if (typeof data === 'undefined') throw new $7033aef23bb2942f$require$InvalidArgumentError('data must be defined');\n        if (typeof responseOptions !== 'object') throw new $7033aef23bb2942f$require$InvalidArgumentError('responseOptions must be an object');\n    }\n    /**\n   * Mock an undici request with a defined reply.\n   */ reply(replyData) {\n        // Values of reply aren't available right now as they\n        // can only be available when the reply callback is invoked.\n        if (typeof replyData === 'function') {\n            // We'll first wrap the provided callback in another function,\n            // this function will properly resolve the data from the callback\n            // when invoked.\n            const wrappedDefaultsCallback = (opts)=>{\n                // Our reply options callback contains the parameter for statusCode, data and options.\n                const resolvedData = replyData(opts);\n                // Check if it is in the right format\n                if (typeof resolvedData !== 'object') throw new $7033aef23bb2942f$require$InvalidArgumentError('reply options callback must return an object');\n                const { statusCode: statusCode, data: data = '', responseOptions: responseOptions = {} } = resolvedData;\n                this.validateReplyParameters(statusCode, data, responseOptions);\n                // Since the values can be obtained immediately we return them\n                // from this higher order function that will be resolved later.\n                return {\n                    ...this.createMockScopeDispatchData(statusCode, data, responseOptions)\n                };\n            };\n            // Add usual dispatch data, but this time set the data parameter to function that will eventually provide data.\n            const newMockDispatch = $7033aef23bb2942f$require$addMockDispatch(this[$7033aef23bb2942f$require$kDispatches], this[$7033aef23bb2942f$require$kDispatchKey], wrappedDefaultsCallback);\n            return new $7033aef23bb2942f$var$MockScope(newMockDispatch);\n        }\n        // We can have either one or three parameters, if we get here,\n        // we should have 1-3 parameters. So we spread the arguments of\n        // this function to obtain the parameters, since replyData will always\n        // just be the statusCode.\n        const [statusCode, data = '', responseOptions = {}] = [\n            ...arguments\n        ];\n        this.validateReplyParameters(statusCode, data, responseOptions);\n        // Send in-already provided data like usual\n        const dispatchData = this.createMockScopeDispatchData(statusCode, data, responseOptions);\n        const newMockDispatch = $7033aef23bb2942f$require$addMockDispatch(this[$7033aef23bb2942f$require$kDispatches], this[$7033aef23bb2942f$require$kDispatchKey], dispatchData);\n        return new $7033aef23bb2942f$var$MockScope(newMockDispatch);\n    }\n    /**\n   * Mock an undici request with a defined error.\n   */ replyWithError(error) {\n        if (typeof error === 'undefined') throw new $7033aef23bb2942f$require$InvalidArgumentError('error must be defined');\n        const newMockDispatch = $7033aef23bb2942f$require$addMockDispatch(this[$7033aef23bb2942f$require$kDispatches], this[$7033aef23bb2942f$require$kDispatchKey], {\n            error: error\n        });\n        return new $7033aef23bb2942f$var$MockScope(newMockDispatch);\n    }\n    /**\n   * Set default reply headers on the interceptor for subsequent replies\n   */ defaultReplyHeaders(headers) {\n        if (typeof headers === 'undefined') throw new $7033aef23bb2942f$require$InvalidArgumentError('headers must be defined');\n        this[$7033aef23bb2942f$require$kDefaultHeaders] = headers;\n        return this;\n    }\n    /**\n   * Set default reply trailers on the interceptor for subsequent replies\n   */ defaultReplyTrailers(trailers) {\n        if (typeof trailers === 'undefined') throw new $7033aef23bb2942f$require$InvalidArgumentError('trailers must be defined');\n        this[$7033aef23bb2942f$require$kDefaultTrailers] = trailers;\n        return this;\n    }\n    /**\n   * Set reply content length header for replies on the interceptor\n   */ replyContentLength() {\n        this[$7033aef23bb2942f$require$kContentLength] = true;\n        return this;\n    }\n}\n$7033aef23bb2942f$export$fb1b189d8a131a8b = $7033aef23bb2942f$var$MockInterceptor;\n$7033aef23bb2942f$export$61f2724da7650995 = $7033aef23bb2942f$var$MockScope;\n\n\nexport {$7033aef23bb2942f$exports as default};\n//# sourceMappingURL=python-version-check.579f9de8.js.map\n","'use strict'\n\nconst { getResponseData, buildKey, addMockDispatch } = require('./mock-utils')\nconst {\n  kDispatches,\n  kDispatchKey,\n  kDefaultHeaders,\n  kDefaultTrailers,\n  kContentLength,\n  kMockDispatch\n} = require('./mock-symbols')\nconst { InvalidArgumentError } = require('../core/errors')\nconst { buildURL } = require('../core/util')\n\n/**\n * Defines the scope API for an interceptor reply\n */\nclass MockScope {\n  constructor (mockDispatch) {\n    this[kMockDispatch] = mockDispatch\n  }\n\n  /**\n   * Delay a reply by a set amount in ms.\n   */\n  delay (waitInMs) {\n    if (typeof waitInMs !== 'number' || !Number.isInteger(waitInMs) || waitInMs <= 0) {\n      throw new InvalidArgumentError('waitInMs must be a valid integer > 0')\n    }\n\n    this[kMockDispatch].delay = waitInMs\n    return this\n  }\n\n  /**\n   * For a defined reply, never mark as consumed.\n   */\n  persist () {\n    this[kMockDispatch].persist = true\n    return this\n  }\n\n  /**\n   * Allow one to define a reply for a set amount of matching requests.\n   */\n  times (repeatTimes) {\n    if (typeof repeatTimes !== 'number' || !Number.isInteger(repeatTimes) || repeatTimes <= 0) {\n      throw new InvalidArgumentError('repeatTimes must be a valid integer > 0')\n    }\n\n    this[kMockDispatch].times = repeatTimes\n    return this\n  }\n}\n\n/**\n * Defines an interceptor for a Mock\n */\nclass MockInterceptor {\n  constructor (opts, mockDispatches) {\n    if (typeof opts !== 'object') {\n      throw new InvalidArgumentError('opts must be an object')\n    }\n    if (typeof opts.path === 'undefined') {\n      throw new InvalidArgumentError('opts.path must be defined')\n    }\n    if (typeof opts.method === 'undefined') {\n      opts.method = 'GET'\n    }\n    // See https://github.com/nodejs/undici/issues/1245\n    // As per RFC 3986, clients are not supposed to send URI\n    // fragments to servers when they retrieve a document,\n    if (typeof opts.path === 'string') {\n      if (opts.query) {\n        opts.path = buildURL(opts.path, opts.query)\n      } else {\n        // Matches https://github.com/nodejs/undici/blob/main/lib/fetch/index.js#L1811\n        const parsedURL = new URL(opts.path, 'data://')\n        opts.path = parsedURL.pathname + parsedURL.search\n      }\n    }\n    if (typeof opts.method === 'string') {\n      opts.method = opts.method.toUpperCase()\n    }\n\n    this[kDispatchKey] = buildKey(opts)\n    this[kDispatches] = mockDispatches\n    this[kDefaultHeaders] = {}\n    this[kDefaultTrailers] = {}\n    this[kContentLength] = false\n  }\n\n  createMockScopeDispatchData (statusCode, data, responseOptions = {}) {\n    const responseData = getResponseData(data)\n    const contentLength = this[kContentLength] ? { 'content-length': responseData.length } : {}\n    const headers = { ...this[kDefaultHeaders], ...contentLength, ...responseOptions.headers }\n    const trailers = { ...this[kDefaultTrailers], ...responseOptions.trailers }\n\n    return { statusCode, data, headers, trailers }\n  }\n\n  validateReplyParameters (statusCode, data, responseOptions) {\n    if (typeof statusCode === 'undefined') {\n      throw new InvalidArgumentError('statusCode must be defined')\n    }\n    if (typeof data === 'undefined') {\n      throw new InvalidArgumentError('data must be defined')\n    }\n    if (typeof responseOptions !== 'object') {\n      throw new InvalidArgumentError('responseOptions must be an object')\n    }\n  }\n\n  /**\n   * Mock an undici request with a defined reply.\n   */\n  reply (replyData) {\n    // Values of reply aren't available right now as they\n    // can only be available when the reply callback is invoked.\n    if (typeof replyData === 'function') {\n      // We'll first wrap the provided callback in another function,\n      // this function will properly resolve the data from the callback\n      // when invoked.\n      const wrappedDefaultsCallback = (opts) => {\n        // Our reply options callback contains the parameter for statusCode, data and options.\n        const resolvedData = replyData(opts)\n\n        // Check if it is in the right format\n        if (typeof resolvedData !== 'object') {\n          throw new InvalidArgumentError('reply options callback must return an object')\n        }\n\n        const { statusCode, data = '', responseOptions = {} } = resolvedData\n        this.validateReplyParameters(statusCode, data, responseOptions)\n        // Since the values can be obtained immediately we return them\n        // from this higher order function that will be resolved later.\n        return {\n          ...this.createMockScopeDispatchData(statusCode, data, responseOptions)\n        }\n      }\n\n      // Add usual dispatch data, but this time set the data parameter to function that will eventually provide data.\n      const newMockDispatch = addMockDispatch(this[kDispatches], this[kDispatchKey], wrappedDefaultsCallback)\n      return new MockScope(newMockDispatch)\n    }\n\n    // We can have either one or three parameters, if we get here,\n    // we should have 1-3 parameters. So we spread the arguments of\n    // this function to obtain the parameters, since replyData will always\n    // just be the statusCode.\n    const [statusCode, data = '', responseOptions = {}] = [...arguments]\n    this.validateReplyParameters(statusCode, data, responseOptions)\n\n    // Send in-already provided data like usual\n    const dispatchData = this.createMockScopeDispatchData(statusCode, data, responseOptions)\n    const newMockDispatch = addMockDispatch(this[kDispatches], this[kDispatchKey], dispatchData)\n    return new MockScope(newMockDispatch)\n  }\n\n  /**\n   * Mock an undici request with a defined error.\n   */\n  replyWithError (error) {\n    if (typeof error === 'undefined') {\n      throw new InvalidArgumentError('error must be defined')\n    }\n\n    const newMockDispatch = addMockDispatch(this[kDispatches], this[kDispatchKey], { error })\n    return new MockScope(newMockDispatch)\n  }\n\n  /**\n   * Set default reply headers on the interceptor for subsequent replies\n   */\n  defaultReplyHeaders (headers) {\n    if (typeof headers === 'undefined') {\n      throw new InvalidArgumentError('headers must be defined')\n    }\n\n    this[kDefaultHeaders] = headers\n    return this\n  }\n\n  /**\n   * Set default reply trailers on the interceptor for subsequent replies\n   */\n  defaultReplyTrailers (trailers) {\n    if (typeof trailers === 'undefined') {\n      throw new InvalidArgumentError('trailers must be defined')\n    }\n\n    this[kDefaultTrailers] = trailers\n    return this\n  }\n\n  /**\n   * Set reply content length header for replies on the interceptor\n   */\n  replyContentLength () {\n    this[kContentLength] = true\n    return this\n  }\n}\n\nmodule.exports.MockInterceptor = MockInterceptor\nmodule.exports.MockScope = MockScope\n"],"names":["$k7TSY$pythonversioncheck3b10f8a1js2","$k7TSY$pythonversioncheck32039d93js5","$k7TSY$pythonversioncheckdba5a2d4js","$k7TSY$pythonversioncheck7ed1514ejs","$7033aef23bb2942f$export$fb1b189d8a131a8b","$7033aef23bb2942f$exports","Object","defineProperty","get","set","v","enumerable","configurable","$7033aef23bb2942f$require$getResponseData","getResponseData","$7033aef23bb2942f$require$buildKey","$k7TSY$pythonversioncheck3b10f8a1js1","buildKey","$7033aef23bb2942f$require$addMockDispatch","$k7TSY$pythonversioncheck3b10f8a1js","addMockDispatch","$7033aef23bb2942f$require$kDispatches","$k7TSY$pythonversioncheck32039d93js3","kDispatches","$7033aef23bb2942f$require$kDispatchKey","$k7TSY$pythonversioncheck32039d93js4","kDispatchKey","$7033aef23bb2942f$require$kDefaultHeaders","$k7TSY$pythonversioncheck32039d93js1","kDefaultHeaders","$7033aef23bb2942f$require$kDefaultTrailers","$k7TSY$pythonversioncheck32039d93js2","kDefaultTrailers","$7033aef23bb2942f$require$kContentLength","$k7TSY$pythonversioncheck32039d93js","kContentLength","$7033aef23bb2942f$require$kMockDispatch","kMockDispatch","$7033aef23bb2942f$require$InvalidArgumentError","InvalidArgumentError","$7033aef23bb2942f$require$buildURL","buildURL","$7033aef23bb2942f$var$MockScope","mockDispatch","delay","waitInMs","Number","isInteger","persist","times","repeatTimes","opts","mockDispatches","path","method","query","parsedURL","URL","pathname","search","toUpperCase","createMockScopeDispatchData","statusCode","data","responseOptions","responseData","contentLength","length","headers","trailers","validateReplyParameters","reply","replyData","wrappedDefaultsCallback","resolvedData","arguments","dispatchData","replyWithError","error","defaultReplyHeaders","defaultReplyTrailers","replyContentLength","default"],"version":3,"file":"python-version-check.579f9de8.js.map","sourceRoot":"../"}