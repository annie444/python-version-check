{"mappings":"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","sources":["<anon>","node_modules/.pnpm/undici@5.29.0/node_modules/undici/lib/agent.js"],"sourcesContent":["import $gH1T0$pythonversioncheckdba5a2d4js from \"./python-version-check.dba5a2d4.js\";\nimport $gH1T0$pythonversioncheckebf2a848js5 from \"./python-version-check.ebf2a848.js\";\nimport $gH1T0$pythonversioncheck8185b27fjs from \"./python-version-check.8185b27f.js\";\nimport $gH1T0$pythonversioncheck91f60e5cjs from \"./python-version-check.91f60e5c.js\";\nimport $gH1T0$pythonversioncheck171f2d6cjs from \"./python-version-check.171f2d6c.js\";\nimport $gH1T0$pythonversioncheck7ed1514ejs from \"./python-version-check.7ed1514e.js\";\nimport $gH1T0$pythonversioncheckdb32945bjs from \"./python-version-check.db32945b.js\";\nimport $gH1T0$pythonversioncheck67cd42dfjs from \"./python-version-check.67cd42df.js\";\n\nvar $74e073c3aa01caf4$exports = {};\n'use strict';\n\nvar $74e073c3aa01caf4$require$InvalidArgumentError = $gH1T0$pythonversioncheckdba5a2d4js.InvalidArgumentError;\n\nvar $74e073c3aa01caf4$require$kClients = $gH1T0$pythonversioncheckebf2a848js.kClients;\nvar $74e073c3aa01caf4$require$kRunning = $gH1T0$pythonversioncheckebf2a848js5.kRunning;\nvar $74e073c3aa01caf4$require$kClose = $gH1T0$pythonversioncheckebf2a848js1.kClose;\nvar $74e073c3aa01caf4$require$kDestroy = $gH1T0$pythonversioncheckebf2a848js2.kDestroy;\nvar $74e073c3aa01caf4$require$kDispatch = $gH1T0$pythonversioncheckebf2a848js3.kDispatch;\nvar $74e073c3aa01caf4$require$kInterceptors = $gH1T0$pythonversioncheckebf2a848js4.kInterceptors;\n\n\n\n\n\n\nconst { WeakRef: $74e073c3aa01caf4$var$WeakRef, FinalizationRegistry: $74e073c3aa01caf4$var$FinalizationRegistry } = $gH1T0$pythonversioncheck67cd42dfjs();\nconst $74e073c3aa01caf4$var$kOnConnect = Symbol('onConnect');\nconst $74e073c3aa01caf4$var$kOnDisconnect = Symbol('onDisconnect');\nconst $74e073c3aa01caf4$var$kOnConnectionError = Symbol('onConnectionError');\nconst $74e073c3aa01caf4$var$kMaxRedirections = Symbol('maxRedirections');\nconst $74e073c3aa01caf4$var$kOnDrain = Symbol('onDrain');\nconst $74e073c3aa01caf4$var$kFactory = Symbol('factory');\nconst $74e073c3aa01caf4$var$kFinalizer = Symbol('finalizer');\nconst $74e073c3aa01caf4$var$kOptions = Symbol('options');\nfunction $74e073c3aa01caf4$var$defaultFactory(origin, opts) {\n    return opts && opts.connections === 1 ? new $gH1T0$pythonversioncheck171f2d6cjs(origin, opts) : new $gH1T0$pythonversioncheck91f60e5cjs(origin, opts);\n}\nclass $74e073c3aa01caf4$var$Agent extends $gH1T0$pythonversioncheck8185b27fjs {\n    constructor({ factory: factory = $74e073c3aa01caf4$var$defaultFactory, maxRedirections: maxRedirections = 0, connect: connect, ...options } = {}){\n        super();\n        if (typeof factory !== 'function') throw new $74e073c3aa01caf4$require$InvalidArgumentError('factory must be a function.');\n        if (connect != null && typeof connect !== 'function' && typeof connect !== 'object') throw new $74e073c3aa01caf4$require$InvalidArgumentError('connect must be a function or an object');\n        if (!Number.isInteger(maxRedirections) || maxRedirections < 0) throw new $74e073c3aa01caf4$require$InvalidArgumentError('maxRedirections must be a positive number');\n        if (connect && typeof connect !== 'function') connect = {\n            ...connect\n        };\n        this[$74e073c3aa01caf4$require$kInterceptors] = options.interceptors && options.interceptors.Agent && Array.isArray(options.interceptors.Agent) ? options.interceptors.Agent : [\n            $gH1T0$pythonversioncheckdb32945bjs({\n                maxRedirections: maxRedirections\n            })\n        ];\n        this[$74e073c3aa01caf4$var$kOptions] = {\n            ...$gH1T0$pythonversioncheck7ed1514ejs.deepClone(options),\n            connect: connect\n        };\n        this[$74e073c3aa01caf4$var$kOptions].interceptors = options.interceptors ? {\n            ...options.interceptors\n        } : undefined;\n        this[$74e073c3aa01caf4$var$kMaxRedirections] = maxRedirections;\n        this[$74e073c3aa01caf4$var$kFactory] = factory;\n        this[$74e073c3aa01caf4$require$kClients] = new Map();\n        this[$74e073c3aa01caf4$var$kFinalizer] = new $74e073c3aa01caf4$var$FinalizationRegistry(/* istanbul ignore next: gc is undeterministic */ (key)=>{\n            const ref = this[$74e073c3aa01caf4$require$kClients].get(key);\n            if (ref !== undefined && ref.deref() === undefined) this[$74e073c3aa01caf4$require$kClients].delete(key);\n        });\n        const agent = this;\n        this[$74e073c3aa01caf4$var$kOnDrain] = (origin, targets)=>{\n            agent.emit('drain', origin, [\n                agent,\n                ...targets\n            ]);\n        };\n        this[$74e073c3aa01caf4$var$kOnConnect] = (origin, targets)=>{\n            agent.emit('connect', origin, [\n                agent,\n                ...targets\n            ]);\n        };\n        this[$74e073c3aa01caf4$var$kOnDisconnect] = (origin, targets, err)=>{\n            agent.emit('disconnect', origin, [\n                agent,\n                ...targets\n            ], err);\n        };\n        this[$74e073c3aa01caf4$var$kOnConnectionError] = (origin, targets, err)=>{\n            agent.emit('connectionError', origin, [\n                agent,\n                ...targets\n            ], err);\n        };\n    }\n    get [$74e073c3aa01caf4$require$kRunning]() {\n        let ret = 0;\n        for (const ref of this[$74e073c3aa01caf4$require$kClients].values()){\n            const client = ref.deref();\n            /* istanbul ignore next: gc is undeterministic */ if (client) ret += client[$74e073c3aa01caf4$require$kRunning];\n        }\n        return ret;\n    }\n    [$74e073c3aa01caf4$require$kDispatch](opts, handler) {\n        let key;\n        if (opts.origin && (typeof opts.origin === 'string' || opts.origin instanceof URL)) key = String(opts.origin);\n        else throw new $74e073c3aa01caf4$require$InvalidArgumentError('opts.origin must be a non-empty string or URL.');\n        const ref = this[$74e073c3aa01caf4$require$kClients].get(key);\n        let dispatcher = ref ? ref.deref() : null;\n        if (!dispatcher) {\n            dispatcher = this[$74e073c3aa01caf4$var$kFactory](opts.origin, this[$74e073c3aa01caf4$var$kOptions]).on('drain', this[$74e073c3aa01caf4$var$kOnDrain]).on('connect', this[$74e073c3aa01caf4$var$kOnConnect]).on('disconnect', this[$74e073c3aa01caf4$var$kOnDisconnect]).on('connectionError', this[$74e073c3aa01caf4$var$kOnConnectionError]);\n            this[$74e073c3aa01caf4$require$kClients].set(key, new $74e073c3aa01caf4$var$WeakRef(dispatcher));\n            this[$74e073c3aa01caf4$var$kFinalizer].register(dispatcher, key);\n        }\n        return dispatcher.dispatch(opts, handler);\n    }\n    async [$74e073c3aa01caf4$require$kClose]() {\n        const closePromises = [];\n        for (const ref of this[$74e073c3aa01caf4$require$kClients].values()){\n            const client = ref.deref();\n            /* istanbul ignore else: gc is undeterministic */ if (client) closePromises.push(client.close());\n        }\n        await Promise.all(closePromises);\n    }\n    async [$74e073c3aa01caf4$require$kDestroy](err) {\n        const destroyPromises = [];\n        for (const ref of this[$74e073c3aa01caf4$require$kClients].values()){\n            const client = ref.deref();\n            /* istanbul ignore else: gc is undeterministic */ if (client) destroyPromises.push(client.destroy(err));\n        }\n        await Promise.all(destroyPromises);\n    }\n}\n$74e073c3aa01caf4$exports = $74e073c3aa01caf4$var$Agent;\n\n\nexport {$74e073c3aa01caf4$exports as default};\n//# sourceMappingURL=python-version-check.c2bfca41.js.map\n","'use strict'\n\nconst { InvalidArgumentError } = require('./core/errors')\nconst { kClients, kRunning, kClose, kDestroy, kDispatch, kInterceptors } = require('./core/symbols')\nconst DispatcherBase = require('./dispatcher-base')\nconst Pool = require('./pool')\nconst Client = require('./client')\nconst util = require('./core/util')\nconst createRedirectInterceptor = require('./interceptor/redirectInterceptor')\nconst { WeakRef, FinalizationRegistry } = require('./compat/dispatcher-weakref')()\n\nconst kOnConnect = Symbol('onConnect')\nconst kOnDisconnect = Symbol('onDisconnect')\nconst kOnConnectionError = Symbol('onConnectionError')\nconst kMaxRedirections = Symbol('maxRedirections')\nconst kOnDrain = Symbol('onDrain')\nconst kFactory = Symbol('factory')\nconst kFinalizer = Symbol('finalizer')\nconst kOptions = Symbol('options')\n\nfunction defaultFactory (origin, opts) {\n  return opts && opts.connections === 1\n    ? new Client(origin, opts)\n    : new Pool(origin, opts)\n}\n\nclass Agent extends DispatcherBase {\n  constructor ({ factory = defaultFactory, maxRedirections = 0, connect, ...options } = {}) {\n    super()\n\n    if (typeof factory !== 'function') {\n      throw new InvalidArgumentError('factory must be a function.')\n    }\n\n    if (connect != null && typeof connect !== 'function' && typeof connect !== 'object') {\n      throw new InvalidArgumentError('connect must be a function or an object')\n    }\n\n    if (!Number.isInteger(maxRedirections) || maxRedirections < 0) {\n      throw new InvalidArgumentError('maxRedirections must be a positive number')\n    }\n\n    if (connect && typeof connect !== 'function') {\n      connect = { ...connect }\n    }\n\n    this[kInterceptors] = options.interceptors && options.interceptors.Agent && Array.isArray(options.interceptors.Agent)\n      ? options.interceptors.Agent\n      : [createRedirectInterceptor({ maxRedirections })]\n\n    this[kOptions] = { ...util.deepClone(options), connect }\n    this[kOptions].interceptors = options.interceptors\n      ? { ...options.interceptors }\n      : undefined\n    this[kMaxRedirections] = maxRedirections\n    this[kFactory] = factory\n    this[kClients] = new Map()\n    this[kFinalizer] = new FinalizationRegistry(/* istanbul ignore next: gc is undeterministic */ key => {\n      const ref = this[kClients].get(key)\n      if (ref !== undefined && ref.deref() === undefined) {\n        this[kClients].delete(key)\n      }\n    })\n\n    const agent = this\n\n    this[kOnDrain] = (origin, targets) => {\n      agent.emit('drain', origin, [agent, ...targets])\n    }\n\n    this[kOnConnect] = (origin, targets) => {\n      agent.emit('connect', origin, [agent, ...targets])\n    }\n\n    this[kOnDisconnect] = (origin, targets, err) => {\n      agent.emit('disconnect', origin, [agent, ...targets], err)\n    }\n\n    this[kOnConnectionError] = (origin, targets, err) => {\n      agent.emit('connectionError', origin, [agent, ...targets], err)\n    }\n  }\n\n  get [kRunning] () {\n    let ret = 0\n    for (const ref of this[kClients].values()) {\n      const client = ref.deref()\n      /* istanbul ignore next: gc is undeterministic */\n      if (client) {\n        ret += client[kRunning]\n      }\n    }\n    return ret\n  }\n\n  [kDispatch] (opts, handler) {\n    let key\n    if (opts.origin && (typeof opts.origin === 'string' || opts.origin instanceof URL)) {\n      key = String(opts.origin)\n    } else {\n      throw new InvalidArgumentError('opts.origin must be a non-empty string or URL.')\n    }\n\n    const ref = this[kClients].get(key)\n\n    let dispatcher = ref ? ref.deref() : null\n    if (!dispatcher) {\n      dispatcher = this[kFactory](opts.origin, this[kOptions])\n        .on('drain', this[kOnDrain])\n        .on('connect', this[kOnConnect])\n        .on('disconnect', this[kOnDisconnect])\n        .on('connectionError', this[kOnConnectionError])\n\n      this[kClients].set(key, new WeakRef(dispatcher))\n      this[kFinalizer].register(dispatcher, key)\n    }\n\n    return dispatcher.dispatch(opts, handler)\n  }\n\n  async [kClose] () {\n    const closePromises = []\n    for (const ref of this[kClients].values()) {\n      const client = ref.deref()\n      /* istanbul ignore else: gc is undeterministic */\n      if (client) {\n        closePromises.push(client.close())\n      }\n    }\n\n    await Promise.all(closePromises)\n  }\n\n  async [kDestroy] (err) {\n    const destroyPromises = []\n    for (const ref of this[kClients].values()) {\n      const client = ref.deref()\n      /* istanbul ignore else: gc is undeterministic */\n      if (client) {\n        destroyPromises.push(client.destroy(err))\n      }\n    }\n\n    await Promise.all(destroyPromises)\n  }\n}\n\nmodule.exports = Agent\n"],"names":["$gH1T0$pythonversioncheckdba5a2d4js","$gH1T0$pythonversioncheckebf2a848js5","$gH1T0$pythonversioncheck8185b27fjs","$gH1T0$pythonversioncheck91f60e5cjs","$gH1T0$pythonversioncheck171f2d6cjs","$gH1T0$pythonversioncheck7ed1514ejs","$gH1T0$pythonversioncheckdb32945bjs","$gH1T0$pythonversioncheck67cd42dfjs","$74e073c3aa01caf4$exports","$74e073c3aa01caf4$require$InvalidArgumentError","InvalidArgumentError","$74e073c3aa01caf4$require$kClients","$gH1T0$pythonversioncheckebf2a848js","kClients","$74e073c3aa01caf4$require$kRunning","kRunning","$74e073c3aa01caf4$require$kClose","$gH1T0$pythonversioncheckebf2a848js1","kClose","$74e073c3aa01caf4$require$kDestroy","$gH1T0$pythonversioncheckebf2a848js2","kDestroy","$74e073c3aa01caf4$require$kDispatch","$gH1T0$pythonversioncheckebf2a848js3","kDispatch","$74e073c3aa01caf4$require$kInterceptors","$gH1T0$pythonversioncheckebf2a848js4","kInterceptors","WeakRef","$74e073c3aa01caf4$var$WeakRef","FinalizationRegistry","$74e073c3aa01caf4$var$FinalizationRegistry","$74e073c3aa01caf4$var$kOnConnect","Symbol","$74e073c3aa01caf4$var$kOnDisconnect","$74e073c3aa01caf4$var$kOnConnectionError","$74e073c3aa01caf4$var$kMaxRedirections","$74e073c3aa01caf4$var$kOnDrain","$74e073c3aa01caf4$var$kFactory","$74e073c3aa01caf4$var$kFinalizer","$74e073c3aa01caf4$var$kOptions","$74e073c3aa01caf4$var$defaultFactory","origin","opts","connections","factory","maxRedirections","connect","options","Number","isInteger","interceptors","Agent","Array","isArray","deepClone","undefined","Map","key","ref","get","deref","delete","agent","targets","emit","err","ret","values","client","handler","URL","String","dispatcher","on","set","register","dispatch","closePromises","push","close","Promise","all","destroyPromises","destroy","default"],"version":3,"file":"python-version-check.c2bfca41.js.map","sourceRoot":"../"}