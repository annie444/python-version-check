import e from"./python-version-check.892401fa.js";import t from"./python-version-check.28dd9cbb.js";import r from"./python-version-check.7ed1514e.js";import s from"./python-version-check.ebf2a848.js";import o from"./python-version-check.801bb0f1.js";import a from"./python-version-check.c211052e.js";import n from"./python-version-check.ff3942ba.js";import c from"./python-version-check.92c00e26.js";import h from"./python-version-check.db834fc6.js";import i from"./python-version-check.3f48d3ee.js";import l from"./python-version-check.2f8c5fad.js";import*as u from"assert";var p={},d=e.kConstruct,f=t.urlEquals,v=$aC1eT$pythonversioncheck28dd9cbbjs.fieldValues,y=r.kEnumerableProperty,m=$aC1eT$pythonversioncheck7ed1514ejs.isDisturbed,C=s.kHeadersList,b=o.webidl,R=a.Response,g=$aC1eT$pythonversioncheckc211052ejs.cloneResponse,k=n.Request,q=c.kState,H=$aC1eT$pythonversioncheck92c00e26js1.kHeaders,_=$aC1eT$pythonversioncheck92c00e26js.kGuard,E=$aC1eT$pythonversioncheck92c00e26js2.kRealm,w=h.fetching,A=i.urlIsHttpHttpsScheme,j=$aC1eT$pythonversioncheck3f48d3eejs.createDeferredPromise,S=$aC1eT$pythonversioncheck3f48d3eejs1.readAllBytes,L=l.getGlobalDispatcher;class O{#e;constructor(){arguments[0]!==d&&b.illegalConstructor(),this.#e=arguments[1]}async match(e,t={}){b.brandCheck(this,O),b.argumentLengthCheck(arguments,1,{header:"Cache.match"}),e=b.converters.RequestInfo(e),t=b.converters.CacheQueryOptions(t);let r=await this.matchAll(e,t);if(0!==r.length)return r[0]}async matchAll(e,t={}){b.brandCheck(this,O),void 0!==e&&(e=b.converters.RequestInfo(e)),t=b.converters.CacheQueryOptions(t);let r=null;if(void 0!==e)if(e instanceof k){if("GET"!==(r=e[q]).method&&!t.ignoreMethod)return[]}else"string"==typeof e&&(r=new k(e)[q]);let s=[];if(void 0===e)for(let e of this.#e)s.push(e[1]);else for(let e of this.#t(r,t))s.push(e[1]);let o=[];for(let e of s){let t=new R(e.body?.source??null),r=t[q].body;t[q]=e,t[q].body=r,t[H][C]=e.headersList,t[H][_]="immutable",o.push(t)}return Object.freeze(o)}async add(e){b.brandCheck(this,O),b.argumentLengthCheck(arguments,1,{header:"Cache.add"});let t=[e=b.converters.RequestInfo(e)],r=this.addAll(t);return await r}async addAll(e){b.brandCheck(this,O),b.argumentLengthCheck(arguments,1,{header:"Cache.addAll"});let t=[],r=[];for(let t of e=b.converters["sequence<RequestInfo>"](e)){if("string"==typeof t)continue;let e=t[q];if(!A(e.url)||"GET"!==e.method)throw b.errors.exception({header:"Cache.addAll",message:"Expected http/s scheme when method is not GET."})}let s=[];for(let o of e){let e=new k(o)[q];if(!A(e.url))throw b.errors.exception({header:"Cache.addAll",message:"Expected http/s scheme."});e.initiator="fetch",e.destination="subresource",r.push(e);let a=j();s.push(w({request:e,dispatcher:L(),processResponse(e){if("error"===e.type||206===e.status||e.status<200||e.status>299)a.reject(b.errors.exception({header:"Cache.addAll",message:"Received an invalid status code or the request failed."}));else if(e.headersList.contains("vary")){for(let t of v(e.headersList.get("vary")))if("*"===t){for(let e of(a.reject(b.errors.exception({header:"Cache.addAll",message:"invalid vary field value"})),s))e.abort();return}}},processResponseEndOfBody(e){if(e.aborted)return void a.reject(new DOMException("aborted","AbortError"));a.resolve(e)}})),t.push(a.promise)}let o=Promise.all(t),a=await o,n=[],c=0;for(let e of a){let t={type:"put",request:r[c],response:e};n.push(t),c++}let h=j(),i=null;try{this.#r(n)}catch(e){i=e}return queueMicrotask(()=>{null===i?h.resolve(void 0):h.reject(i)}),h.promise}async put(e,t){b.brandCheck(this,O),b.argumentLengthCheck(arguments,2,{header:"Cache.put"}),e=b.converters.RequestInfo(e),t=b.converters.Response(t);let r=null;if(!A((r=e instanceof k?e[q]:new k(e)[q]).url)||"GET"!==r.method)throw b.errors.exception({header:"Cache.put",message:"Expected an http/s scheme when method is not GET"});let s=t[q];if(206===s.status)throw b.errors.exception({header:"Cache.put",message:"Got 206 status"});if(s.headersList.contains("vary")){for(let e of v(s.headersList.get("vary")))if("*"===e)throw b.errors.exception({header:"Cache.put",message:"Got * vary field value"})}if(s.body&&(m(s.body.stream)||s.body.stream.locked))throw b.errors.exception({header:"Cache.put",message:"Response body is locked or disturbed"});let o=g(s),a=j();null!=s.body?S(s.body.stream.getReader()).then(a.resolve,a.reject):a.resolve(void 0);let n=[],c={type:"put",request:r,response:o};n.push(c);let h=await a.promise;null!=o.body&&(o.body.source=h);let i=j(),l=null;try{this.#r(n)}catch(e){l=e}return queueMicrotask(()=>{null===l?i.resolve():i.reject(l)}),i.promise}async delete(e,t={}){let r;b.brandCheck(this,O),b.argumentLengthCheck(arguments,1,{header:"Cache.delete"}),e=b.converters.RequestInfo(e),t=b.converters.CacheQueryOptions(t);let s=null;if(e instanceof k){if("GET"!==(s=e[q]).method&&!t.ignoreMethod)return!1}else u("string"==typeof e),s=new k(e)[q];let o=[],a={type:"delete",request:s,options:t};o.push(a);let n=j(),c=null;try{r=this.#r(o)}catch(e){c=e}return queueMicrotask(()=>{null===c?n.resolve(!!r?.length):n.reject(c)}),n.promise}async keys(e,t={}){b.brandCheck(this,O),void 0!==e&&(e=b.converters.RequestInfo(e)),t=b.converters.CacheQueryOptions(t);let r=null;if(void 0!==e)if(e instanceof k){if("GET"!==(r=e[q]).method&&!t.ignoreMethod)return[]}else"string"==typeof e&&(r=new k(e)[q]);let s=j(),o=[];if(void 0===e)for(let e of this.#e)o.push(e[0]);else for(let e of this.#t(r,t))o.push(e[0]);return queueMicrotask(()=>{let e=[];for(let t of o){let r=new k("https://a");r[q]=t,r[H][C]=t.headersList,r[H][_]="immutable",r[E]=t.client,e.push(r)}s.resolve(Object.freeze(e))}),s.promise}#r(e){let t=this.#e,r=[...t],s=[],o=[];try{for(let r of e){let e;if("delete"!==r.type&&"put"!==r.type)throw b.errors.exception({header:"Cache.#batchCacheOperations",message:'operation type does not match "delete" or "put"'});if("delete"===r.type&&null!=r.response)throw b.errors.exception({header:"Cache.#batchCacheOperations",message:"delete operation should not have an associated response"});if(this.#t(r.request,r.options,s).length)throw new DOMException("???","InvalidStateError");if("delete"===r.type){if(e=this.#t(r.request,r.options),0===e.length)return[];for(let r of e){let e=t.indexOf(r);u(-1!==e),t.splice(e,1)}}else if("put"===r.type){if(null==r.response)throw b.errors.exception({header:"Cache.#batchCacheOperations",message:"put operation should have an associated response"});let o=r.request;if(!A(o.url))throw b.errors.exception({header:"Cache.#batchCacheOperations",message:"expected http or https scheme"});if("GET"!==o.method)throw b.errors.exception({header:"Cache.#batchCacheOperations",message:"not get method"});if(null!=r.options)throw b.errors.exception({header:"Cache.#batchCacheOperations",message:"options must not be defined"});for(let s of e=this.#t(r.request)){let e=t.indexOf(s);u(-1!==e),t.splice(e,1)}t.push([r.request,r.response]),s.push([r.request,r.response])}o.push([r.request,r.response])}return o}catch(e){throw this.#e.length=0,this.#e=r,e}}#t(e,t,r){let s=[];for(let o of r??this.#e){let[r,a]=o;this.#s(e,r,a,t)&&s.push(o)}return s}#s(e,t,r=null,s){let o=new URL(e.url),a=new URL(t.url);if(s?.ignoreSearch&&(a.search="",o.search=""),!f(o,a,!0))return!1;if(null==r||s?.ignoreVary||!r.headersList.contains("vary"))return!0;for(let s of v(r.headersList.get("vary")))if("*"===s||t.headersList.get(s)!==e.headersList.get(s))return!1;return!0}}Object.defineProperties(O.prototype,{[Symbol.toStringTag]:{value:"Cache",configurable:!0},match:y,matchAll:y,add:y,addAll:y,put:y,delete:y,keys:y});let x=[{key:"ignoreSearch",converter:b.converters.boolean,defaultValue:!1},{key:"ignoreMethod",converter:b.converters.boolean,defaultValue:!1},{key:"ignoreVary",converter:b.converters.boolean,defaultValue:!1}];b.converters.CacheQueryOptions=b.dictionaryConverter(x),b.converters.MultiCacheQueryOptions=b.dictionaryConverter([...x,{key:"cacheName",converter:b.converters.DOMString}]),b.converters.Response=b.interfaceConverter(R),b.converters["sequence<RequestInfo>"]=b.sequenceConverter(b.converters.RequestInfo),p={Cache:O};export{p as default};
//# sourceMappingURL=python-version-check.471ed536.js.map
