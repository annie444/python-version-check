{"mappings":"A,O,M,qD,A,Q,M,qD,A,Q,M,qD,A,Q,M,qD,A,Q,Y,C,K,a,A,Q,Y,C,K,W,C,I,E,C,ECUA,SAAS,EAAQ,CAAI,EACnB,GAAI,CAAE,CAAA,IAAI,YAAY,CAAA,EAAW,OAAO,IAAI,EAAO,GAEnD,GAAI,AAAgB,UAAhB,OAAO,EACT,MAAM,AAAI,UAAU,sCAEtB,GAAI,AAAwB,UAAxB,OAAO,EAAK,OAAO,CACrB,MAAM,AAAI,UAAU,6DAEtB,GAAI,AAAwC,UAAxC,OAAO,EAAK,OAAO,CAAC,eAAe,CACrC,MAAM,AAAI,UAAU,gCAGtB,GAAM,CAAA,QACJ,CAAO,CACP,GAAG,EACJ,CAAG,CAEJ,CAAA,IAAI,CAAC,IAAI,CAAG,CACV,YAAa,CAAA,EACb,GAAG,CAAa,AAClB,EACA,AA9BI,EA8BW,IAAI,CAAC,IAAI,CAAE,IAAI,CAAC,IAAI,EAEnC,IAAI,CAAC,KAAK,CAAG,CAAA,EACb,IAAI,CAAC,OAAO,CAAG,IAAI,CAAC,kBAAkB,CAAC,GACvC,IAAI,CAAC,SAAS,CAAG,CAAA,CACnB,CACA,AAnCM,EAmCG,EApCH,GAsCN,EAAO,SAAS,CAAC,IAAI,CAAG,SAAU,CAAE,EAClC,GAAI,AAAO,WAAP,EAAiB,CACnB,GAAI,CAAC,IAAI,CAAC,KAAK,CAAE,YACf,IAAI,CAAC,OAAO,EAAE,MAET,GAAI,IAAI,CAAC,SAAS,CACvB,MAEF,CAAA,IAAI,CAAC,SAAS,CAAG,CAAA,CACnB,CACA,AAhDI,EAgDW,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,UAC5C,EAEA,EAAO,SAAS,CAAC,kBAAkB,CAAG,SAAU,CAAO,EACrD,IAAM,EAAS,EAAY,CAAO,CAAC,eAAe,EAE5C,EAAM,CACV,WAAY,IAAI,CAAC,IAAI,CAAC,UAAU,CAChC,QAAS,IAAI,CAAC,IAAI,CAAC,OAAO,CAC1B,QAAA,EACA,cAAe,IAAI,CAAC,IAAI,CAAC,aAAa,CACtC,YAAa,IAAI,CAAC,IAAI,CAAC,WAAW,CAClC,OAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,CACxB,cAAe,EACf,aAAc,IAAI,CAAC,IAAI,CAAC,YAAY,AACtC,EAEA,GAAI,EAAgB,MAAM,CAAC,IAAI,CAAC,CAAM,CAAC,EAAE,EACvC,OAAO,IAAI,EAAgB,IAAI,CAAE,GAEnC,GAAI,EAAiB,MAAM,CAAC,IAAI,CAAC,CAAM,CAAC,EAAE,EACxC,OAAO,IAAI,EAAiB,IAAI,CAAE,EAEpC,OAAM,AAAI,MAAM,4BAClB,EAEA,EAAO,SAAS,CAAC,MAAM,CAAG,SAAU,CAAK,CAAE,CAAQ,CAAE,CAAE,EACrD,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAO,EAC5B,EAEA,EAAiB,EACjB,EAAe,OAAO,CAAG,EACzB,EAAe,MAAM,CAAG,EAExB,EAAe,KAAK,CAAG,S,K,O","sources":["<anon>","node_modules/.pnpm/@fastify+busboy@2.1.1/node_modules/@fastify/busboy/lib/main.js"],"sourcesContent":["import $kikGp$pythonversioncheck8bf8cf5cjs from \"./python-version-check.8bf8cf5c.js\";\nimport $kikGp$pythonversioncheckd76106eejs from \"./python-version-check.d76106ee.js\";\nimport $kikGp$pythonversioncheck89a0ce5djs from \"./python-version-check.89a0ce5d.js\";\nimport $kikGp$pythonversioncheck789a0bf3js from \"./python-version-check.789a0bf3.js\";\nimport {Writable as $kikGp$Writable} from \"node:stream\";\nimport {inherits as $kikGp$inherits} from \"node:util\";\n\nvar $a9bf9b32c7caef1a$exports = {};\n'use strict';\n\nvar $a9bf9b32c7caef1a$require$WritableStream = $kikGp$Writable;\n\nvar $a9bf9b32c7caef1a$require$inherits = $kikGp$inherits;\n\n\n\n\nfunction $a9bf9b32c7caef1a$var$Busboy(opts) {\n    if (!(this instanceof $a9bf9b32c7caef1a$var$Busboy)) return new $a9bf9b32c7caef1a$var$Busboy(opts);\n    if (typeof opts !== 'object') throw new TypeError('Busboy expected an options-Object.');\n    if (typeof opts.headers !== 'object') throw new TypeError('Busboy expected an options-Object with headers-attribute.');\n    if (typeof opts.headers['content-type'] !== 'string') throw new TypeError('Missing Content-Type-header.');\n    const { headers: headers, ...streamOptions } = opts;\n    this.opts = {\n        autoDestroy: false,\n        ...streamOptions\n    };\n    $a9bf9b32c7caef1a$require$WritableStream.call(this, this.opts);\n    this._done = false;\n    this._parser = this.getParserByHeaders(headers);\n    this._finished = false;\n}\n$a9bf9b32c7caef1a$require$inherits($a9bf9b32c7caef1a$var$Busboy, $a9bf9b32c7caef1a$require$WritableStream);\n$a9bf9b32c7caef1a$var$Busboy.prototype.emit = function(ev) {\n    if (ev === 'finish') {\n        if (!this._done) {\n            this._parser?.end();\n            return;\n        } else if (this._finished) return;\n        this._finished = true;\n    }\n    $a9bf9b32c7caef1a$require$WritableStream.prototype.emit.apply(this, arguments);\n};\n$a9bf9b32c7caef1a$var$Busboy.prototype.getParserByHeaders = function(headers) {\n    const parsed = $kikGp$pythonversioncheck789a0bf3js(headers['content-type']);\n    const cfg = {\n        defCharset: this.opts.defCharset,\n        fileHwm: this.opts.fileHwm,\n        headers: headers,\n        highWaterMark: this.opts.highWaterMark,\n        isPartAFile: this.opts.isPartAFile,\n        limits: this.opts.limits,\n        parsedConType: parsed,\n        preservePath: this.opts.preservePath\n    };\n    if ($kikGp$pythonversioncheckd76106eejs.detect.test(parsed[0])) return new $kikGp$pythonversioncheckd76106eejs(this, cfg);\n    if ($kikGp$pythonversioncheck89a0ce5djs.detect.test(parsed[0])) return new $kikGp$pythonversioncheck89a0ce5djs(this, cfg);\n    throw new Error('Unsupported Content-Type.');\n};\n$a9bf9b32c7caef1a$var$Busboy.prototype._write = function(chunk, encoding, cb) {\n    this._parser.write(chunk, cb);\n};\n$a9bf9b32c7caef1a$exports = $a9bf9b32c7caef1a$var$Busboy;\n$a9bf9b32c7caef1a$exports.default = $a9bf9b32c7caef1a$var$Busboy;\n$a9bf9b32c7caef1a$exports.Busboy = $a9bf9b32c7caef1a$var$Busboy;\n$a9bf9b32c7caef1a$exports.Dicer = $kikGp$pythonversioncheck8bf8cf5cjs;\n\n\nexport {$a9bf9b32c7caef1a$exports as default};\n//# sourceMappingURL=python-version-check.5a6f079b.js.map\n","'use strict'\n\nconst WritableStream = require('node:stream').Writable\nconst { inherits } = require('node:util')\nconst Dicer = require('../deps/dicer/lib/Dicer')\n\nconst MultipartParser = require('./types/multipart')\nconst UrlencodedParser = require('./types/urlencoded')\nconst parseParams = require('./utils/parseParams')\n\nfunction Busboy (opts) {\n  if (!(this instanceof Busboy)) { return new Busboy(opts) }\n\n  if (typeof opts !== 'object') {\n    throw new TypeError('Busboy expected an options-Object.')\n  }\n  if (typeof opts.headers !== 'object') {\n    throw new TypeError('Busboy expected an options-Object with headers-attribute.')\n  }\n  if (typeof opts.headers['content-type'] !== 'string') {\n    throw new TypeError('Missing Content-Type-header.')\n  }\n\n  const {\n    headers,\n    ...streamOptions\n  } = opts\n\n  this.opts = {\n    autoDestroy: false,\n    ...streamOptions\n  }\n  WritableStream.call(this, this.opts)\n\n  this._done = false\n  this._parser = this.getParserByHeaders(headers)\n  this._finished = false\n}\ninherits(Busboy, WritableStream)\n\nBusboy.prototype.emit = function (ev) {\n  if (ev === 'finish') {\n    if (!this._done) {\n      this._parser?.end()\n      return\n    } else if (this._finished) {\n      return\n    }\n    this._finished = true\n  }\n  WritableStream.prototype.emit.apply(this, arguments)\n}\n\nBusboy.prototype.getParserByHeaders = function (headers) {\n  const parsed = parseParams(headers['content-type'])\n\n  const cfg = {\n    defCharset: this.opts.defCharset,\n    fileHwm: this.opts.fileHwm,\n    headers,\n    highWaterMark: this.opts.highWaterMark,\n    isPartAFile: this.opts.isPartAFile,\n    limits: this.opts.limits,\n    parsedConType: parsed,\n    preservePath: this.opts.preservePath\n  }\n\n  if (MultipartParser.detect.test(parsed[0])) {\n    return new MultipartParser(this, cfg)\n  }\n  if (UrlencodedParser.detect.test(parsed[0])) {\n    return new UrlencodedParser(this, cfg)\n  }\n  throw new Error('Unsupported Content-Type.')\n}\n\nBusboy.prototype._write = function (chunk, encoding, cb) {\n  this._parser.write(chunk, cb)\n}\n\nmodule.exports = Busboy\nmodule.exports.default = Busboy\nmodule.exports.Busboy = Busboy\n\nmodule.exports.Dicer = Dicer\n"],"names":["$kikGp$pythonversioncheck8bf8cf5cjs","$kikGp$pythonversioncheckd76106eejs","$kikGp$pythonversioncheck89a0ce5djs","$kikGp$pythonversioncheck789a0bf3js","Writable","$kikGp$Writable","inherits","$kikGp$inherits","$a9bf9b32c7caef1a$exports","$a9bf9b32c7caef1a$var$Busboy","opts","TypeError","headers","streamOptions","autoDestroy","$a9bf9b32c7caef1a$require$WritableStream","call","_done","_parser","getParserByHeaders","_finished","$a9bf9b32c7caef1a$require$inherits","prototype","emit","ev","end","apply","arguments","parsed","cfg","defCharset","fileHwm","highWaterMark","isPartAFile","limits","parsedConType","preservePath","detect","test","Error","_write","chunk","encoding","cb","write","default","Busboy","Dicer"],"version":3,"file":"python-version-check.5a6f079b.js.map","sourceRoot":"../"}