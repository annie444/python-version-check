{"mappings":"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","sources":["<anon>","node_modules/.pnpm/undici@5.29.0/node_modules/undici/lib/proxy-agent.js"],"sourcesContent":["import $5UmLx$pythonversioncheckebf2a848js3 from \"./python-version-check.ebf2a848.js\";\nimport $5UmLx$pythonversioncheckc2bfca41js from \"./python-version-check.c2bfca41.js\";\nimport $5UmLx$pythonversioncheck91f60e5cjs from \"./python-version-check.91f60e5c.js\";\nimport $5UmLx$pythonversioncheck8185b27fjs from \"./python-version-check.8185b27f.js\";\nimport $5UmLx$pythonversioncheckdba5a2d4js1 from \"./python-version-check.dba5a2d4.js\";\nimport $5UmLx$pythonversioncheck091f3542js from \"./python-version-check.091f3542.js\";\nimport {URL as $5UmLx$URL} from \"url\";\n\nvar $0fc82f3d6ffcac02$exports = {};\n'use strict';\n\nvar $0fc82f3d6ffcac02$require$kProxy = $5UmLx$pythonversioncheckebf2a848js3.kProxy;\nvar $0fc82f3d6ffcac02$require$kClose = $5UmLx$pythonversioncheckebf2a848js.kClose;\nvar $0fc82f3d6ffcac02$require$kDestroy = $5UmLx$pythonversioncheckebf2a848js1.kDestroy;\nvar $0fc82f3d6ffcac02$require$kInterceptors = $5UmLx$pythonversioncheckebf2a848js2.kInterceptors;\n\nvar $0fc82f3d6ffcac02$require$URL = $5UmLx$URL;\n\n\n\n\nvar $0fc82f3d6ffcac02$require$InvalidArgumentError = $5UmLx$pythonversioncheckdba5a2d4js.InvalidArgumentError;\nvar $0fc82f3d6ffcac02$require$RequestAbortedError = $5UmLx$pythonversioncheckdba5a2d4js1.RequestAbortedError;\n\nconst $0fc82f3d6ffcac02$var$kAgent = Symbol('proxy agent');\nconst $0fc82f3d6ffcac02$var$kClient = Symbol('proxy client');\nconst $0fc82f3d6ffcac02$var$kProxyHeaders = Symbol('proxy headers');\nconst $0fc82f3d6ffcac02$var$kRequestTls = Symbol('request tls settings');\nconst $0fc82f3d6ffcac02$var$kProxyTls = Symbol('proxy tls settings');\nconst $0fc82f3d6ffcac02$var$kConnectEndpoint = Symbol('connect endpoint function');\nfunction $0fc82f3d6ffcac02$var$defaultProtocolPort(protocol) {\n    return protocol === 'https:' ? 443 : 80;\n}\nfunction $0fc82f3d6ffcac02$var$buildProxyOptions(opts) {\n    if (typeof opts === 'string') opts = {\n        uri: opts\n    };\n    if (!opts || !opts.uri) throw new $0fc82f3d6ffcac02$require$InvalidArgumentError('Proxy opts.uri is mandatory');\n    return {\n        uri: opts.uri,\n        protocol: opts.protocol || 'https'\n    };\n}\nfunction $0fc82f3d6ffcac02$var$defaultFactory(origin, opts) {\n    return new $5UmLx$pythonversioncheck91f60e5cjs(origin, opts);\n}\nclass $0fc82f3d6ffcac02$var$ProxyAgent extends $5UmLx$pythonversioncheck8185b27fjs {\n    constructor(opts){\n        super(opts);\n        this[$0fc82f3d6ffcac02$require$kProxy] = $0fc82f3d6ffcac02$var$buildProxyOptions(opts);\n        this[$0fc82f3d6ffcac02$var$kAgent] = new $5UmLx$pythonversioncheckc2bfca41js(opts);\n        this[$0fc82f3d6ffcac02$require$kInterceptors] = opts.interceptors && opts.interceptors.ProxyAgent && Array.isArray(opts.interceptors.ProxyAgent) ? opts.interceptors.ProxyAgent : [];\n        if (typeof opts === 'string') opts = {\n            uri: opts\n        };\n        if (!opts || !opts.uri) throw new $0fc82f3d6ffcac02$require$InvalidArgumentError('Proxy opts.uri is mandatory');\n        const { clientFactory: clientFactory = $0fc82f3d6ffcac02$var$defaultFactory } = opts;\n        if (typeof clientFactory !== 'function') throw new $0fc82f3d6ffcac02$require$InvalidArgumentError('Proxy opts.clientFactory must be a function.');\n        this[$0fc82f3d6ffcac02$var$kRequestTls] = opts.requestTls;\n        this[$0fc82f3d6ffcac02$var$kProxyTls] = opts.proxyTls;\n        this[$0fc82f3d6ffcac02$var$kProxyHeaders] = opts.headers || {};\n        const resolvedUrl = new $0fc82f3d6ffcac02$require$URL(opts.uri);\n        const { origin: origin, port: port, host: host, username: username, password: password } = resolvedUrl;\n        if (opts.auth && opts.token) throw new $0fc82f3d6ffcac02$require$InvalidArgumentError('opts.auth cannot be used in combination with opts.token');\n        else if (opts.auth) /* @deprecated in favour of opts.token */ this[$0fc82f3d6ffcac02$var$kProxyHeaders]['proxy-authorization'] = `Basic ${opts.auth}`;\n        else if (opts.token) this[$0fc82f3d6ffcac02$var$kProxyHeaders]['proxy-authorization'] = opts.token;\n        else if (username && password) this[$0fc82f3d6ffcac02$var$kProxyHeaders]['proxy-authorization'] = `Basic ${Buffer.from(`${decodeURIComponent(username)}:${decodeURIComponent(password)}`).toString('base64')}`;\n        const connect = $5UmLx$pythonversioncheck091f3542js({\n            ...opts.proxyTls\n        });\n        this[$0fc82f3d6ffcac02$var$kConnectEndpoint] = $5UmLx$pythonversioncheck091f3542js({\n            ...opts.requestTls\n        });\n        this[$0fc82f3d6ffcac02$var$kClient] = clientFactory(resolvedUrl, {\n            connect: connect\n        });\n        this[$0fc82f3d6ffcac02$var$kAgent] = new $5UmLx$pythonversioncheckc2bfca41js({\n            ...opts,\n            connect: async (opts, callback)=>{\n                let requestedHost = opts.host;\n                if (!opts.port) requestedHost += `:${$0fc82f3d6ffcac02$var$defaultProtocolPort(opts.protocol)}`;\n                try {\n                    const { socket: socket, statusCode: statusCode } = await this[$0fc82f3d6ffcac02$var$kClient].connect({\n                        origin: origin,\n                        port: port,\n                        path: requestedHost,\n                        signal: opts.signal,\n                        headers: {\n                            ...this[$0fc82f3d6ffcac02$var$kProxyHeaders],\n                            host: host\n                        }\n                    });\n                    if (statusCode !== 200) {\n                        socket.on('error', ()=>{}).destroy();\n                        callback(new $0fc82f3d6ffcac02$require$RequestAbortedError(`Proxy response (${statusCode}) !== 200 when HTTP Tunneling`));\n                    }\n                    if (opts.protocol !== 'https:') {\n                        callback(null, socket);\n                        return;\n                    }\n                    let servername;\n                    if (this[$0fc82f3d6ffcac02$var$kRequestTls]) servername = this[$0fc82f3d6ffcac02$var$kRequestTls].servername;\n                    else servername = opts.servername;\n                    this[$0fc82f3d6ffcac02$var$kConnectEndpoint]({\n                        ...opts,\n                        servername: servername,\n                        httpSocket: socket\n                    }, callback);\n                } catch (err) {\n                    callback(err);\n                }\n            }\n        });\n    }\n    dispatch(opts, handler) {\n        const { host: host } = new $0fc82f3d6ffcac02$require$URL(opts.origin);\n        const headers = $0fc82f3d6ffcac02$var$buildHeaders(opts.headers);\n        $0fc82f3d6ffcac02$var$throwIfProxyAuthIsSent(headers);\n        return this[$0fc82f3d6ffcac02$var$kAgent].dispatch({\n            ...opts,\n            headers: {\n                ...headers,\n                host: host\n            }\n        }, handler);\n    }\n    async [$0fc82f3d6ffcac02$require$kClose]() {\n        await this[$0fc82f3d6ffcac02$var$kAgent].close();\n        await this[$0fc82f3d6ffcac02$var$kClient].close();\n    }\n    async [$0fc82f3d6ffcac02$require$kDestroy]() {\n        await this[$0fc82f3d6ffcac02$var$kAgent].destroy();\n        await this[$0fc82f3d6ffcac02$var$kClient].destroy();\n    }\n}\n/**\n * @param {string[] | Record<string, string>} headers\n * @returns {Record<string, string>}\n */ function $0fc82f3d6ffcac02$var$buildHeaders(headers) {\n    // When using undici.fetch, the headers list is stored\n    // as an array.\n    if (Array.isArray(headers)) {\n        /** @type {Record<string, string>} */ const headersPair = {};\n        for(let i = 0; i < headers.length; i += 2)headersPair[headers[i]] = headers[i + 1];\n        return headersPair;\n    }\n    return headers;\n}\n/**\n * @param {Record<string, string>} headers\n *\n * Previous versions of ProxyAgent suggests the Proxy-Authorization in request headers\n * Nevertheless, it was changed and to avoid a security vulnerability by end users\n * this check was created.\n * It should be removed in the next major version for performance reasons\n */ function $0fc82f3d6ffcac02$var$throwIfProxyAuthIsSent(headers) {\n    const existProxyAuth = headers && Object.keys(headers).find((key)=>key.toLowerCase() === 'proxy-authorization');\n    if (existProxyAuth) throw new $0fc82f3d6ffcac02$require$InvalidArgumentError('Proxy-Authorization should be sent in ProxyAgent constructor');\n}\n$0fc82f3d6ffcac02$exports = $0fc82f3d6ffcac02$var$ProxyAgent;\n\n\nexport {$0fc82f3d6ffcac02$exports as default};\n//# sourceMappingURL=python-version-check.c8166846.js.map\n","'use strict'\n\nconst { kProxy, kClose, kDestroy, kInterceptors } = require('./core/symbols')\nconst { URL } = require('url')\nconst Agent = require('./agent')\nconst Pool = require('./pool')\nconst DispatcherBase = require('./dispatcher-base')\nconst { InvalidArgumentError, RequestAbortedError } = require('./core/errors')\nconst buildConnector = require('./core/connect')\n\nconst kAgent = Symbol('proxy agent')\nconst kClient = Symbol('proxy client')\nconst kProxyHeaders = Symbol('proxy headers')\nconst kRequestTls = Symbol('request tls settings')\nconst kProxyTls = Symbol('proxy tls settings')\nconst kConnectEndpoint = Symbol('connect endpoint function')\n\nfunction defaultProtocolPort (protocol) {\n  return protocol === 'https:' ? 443 : 80\n}\n\nfunction buildProxyOptions (opts) {\n  if (typeof opts === 'string') {\n    opts = { uri: opts }\n  }\n\n  if (!opts || !opts.uri) {\n    throw new InvalidArgumentError('Proxy opts.uri is mandatory')\n  }\n\n  return {\n    uri: opts.uri,\n    protocol: opts.protocol || 'https'\n  }\n}\n\nfunction defaultFactory (origin, opts) {\n  return new Pool(origin, opts)\n}\n\nclass ProxyAgent extends DispatcherBase {\n  constructor (opts) {\n    super(opts)\n    this[kProxy] = buildProxyOptions(opts)\n    this[kAgent] = new Agent(opts)\n    this[kInterceptors] = opts.interceptors && opts.interceptors.ProxyAgent && Array.isArray(opts.interceptors.ProxyAgent)\n      ? opts.interceptors.ProxyAgent\n      : []\n\n    if (typeof opts === 'string') {\n      opts = { uri: opts }\n    }\n\n    if (!opts || !opts.uri) {\n      throw new InvalidArgumentError('Proxy opts.uri is mandatory')\n    }\n\n    const { clientFactory = defaultFactory } = opts\n\n    if (typeof clientFactory !== 'function') {\n      throw new InvalidArgumentError('Proxy opts.clientFactory must be a function.')\n    }\n\n    this[kRequestTls] = opts.requestTls\n    this[kProxyTls] = opts.proxyTls\n    this[kProxyHeaders] = opts.headers || {}\n\n    const resolvedUrl = new URL(opts.uri)\n    const { origin, port, host, username, password } = resolvedUrl\n\n    if (opts.auth && opts.token) {\n      throw new InvalidArgumentError('opts.auth cannot be used in combination with opts.token')\n    } else if (opts.auth) {\n      /* @deprecated in favour of opts.token */\n      this[kProxyHeaders]['proxy-authorization'] = `Basic ${opts.auth}`\n    } else if (opts.token) {\n      this[kProxyHeaders]['proxy-authorization'] = opts.token\n    } else if (username && password) {\n      this[kProxyHeaders]['proxy-authorization'] = `Basic ${Buffer.from(`${decodeURIComponent(username)}:${decodeURIComponent(password)}`).toString('base64')}`\n    }\n\n    const connect = buildConnector({ ...opts.proxyTls })\n    this[kConnectEndpoint] = buildConnector({ ...opts.requestTls })\n    this[kClient] = clientFactory(resolvedUrl, { connect })\n    this[kAgent] = new Agent({\n      ...opts,\n      connect: async (opts, callback) => {\n        let requestedHost = opts.host\n        if (!opts.port) {\n          requestedHost += `:${defaultProtocolPort(opts.protocol)}`\n        }\n        try {\n          const { socket, statusCode } = await this[kClient].connect({\n            origin,\n            port,\n            path: requestedHost,\n            signal: opts.signal,\n            headers: {\n              ...this[kProxyHeaders],\n              host\n            }\n          })\n          if (statusCode !== 200) {\n            socket.on('error', () => {}).destroy()\n            callback(new RequestAbortedError(`Proxy response (${statusCode}) !== 200 when HTTP Tunneling`))\n          }\n          if (opts.protocol !== 'https:') {\n            callback(null, socket)\n            return\n          }\n          let servername\n          if (this[kRequestTls]) {\n            servername = this[kRequestTls].servername\n          } else {\n            servername = opts.servername\n          }\n          this[kConnectEndpoint]({ ...opts, servername, httpSocket: socket }, callback)\n        } catch (err) {\n          callback(err)\n        }\n      }\n    })\n  }\n\n  dispatch (opts, handler) {\n    const { host } = new URL(opts.origin)\n    const headers = buildHeaders(opts.headers)\n    throwIfProxyAuthIsSent(headers)\n    return this[kAgent].dispatch(\n      {\n        ...opts,\n        headers: {\n          ...headers,\n          host\n        }\n      },\n      handler\n    )\n  }\n\n  async [kClose] () {\n    await this[kAgent].close()\n    await this[kClient].close()\n  }\n\n  async [kDestroy] () {\n    await this[kAgent].destroy()\n    await this[kClient].destroy()\n  }\n}\n\n/**\n * @param {string[] | Record<string, string>} headers\n * @returns {Record<string, string>}\n */\nfunction buildHeaders (headers) {\n  // When using undici.fetch, the headers list is stored\n  // as an array.\n  if (Array.isArray(headers)) {\n    /** @type {Record<string, string>} */\n    const headersPair = {}\n\n    for (let i = 0; i < headers.length; i += 2) {\n      headersPair[headers[i]] = headers[i + 1]\n    }\n\n    return headersPair\n  }\n\n  return headers\n}\n\n/**\n * @param {Record<string, string>} headers\n *\n * Previous versions of ProxyAgent suggests the Proxy-Authorization in request headers\n * Nevertheless, it was changed and to avoid a security vulnerability by end users\n * this check was created.\n * It should be removed in the next major version for performance reasons\n */\nfunction throwIfProxyAuthIsSent (headers) {\n  const existProxyAuth = headers && Object.keys(headers)\n    .find((key) => key.toLowerCase() === 'proxy-authorization')\n  if (existProxyAuth) {\n    throw new InvalidArgumentError('Proxy-Authorization should be sent in ProxyAgent constructor')\n  }\n}\n\nmodule.exports = ProxyAgent\n"],"names":["$5UmLx$pythonversioncheckebf2a848js3","$5UmLx$pythonversioncheckc2bfca41js","$5UmLx$pythonversioncheck91f60e5cjs","$5UmLx$pythonversioncheck8185b27fjs","$5UmLx$pythonversioncheckdba5a2d4js1","$5UmLx$pythonversioncheck091f3542js","URL","$5UmLx$URL","$0fc82f3d6ffcac02$exports","$0fc82f3d6ffcac02$require$kProxy","kProxy","$0fc82f3d6ffcac02$require$kClose","$5UmLx$pythonversioncheckebf2a848js","kClose","$0fc82f3d6ffcac02$require$kDestroy","$5UmLx$pythonversioncheckebf2a848js1","kDestroy","$0fc82f3d6ffcac02$require$kInterceptors","$5UmLx$pythonversioncheckebf2a848js2","kInterceptors","$0fc82f3d6ffcac02$require$InvalidArgumentError","$5UmLx$pythonversioncheckdba5a2d4js","InvalidArgumentError","$0fc82f3d6ffcac02$require$RequestAbortedError","RequestAbortedError","$0fc82f3d6ffcac02$var$kAgent","Symbol","$0fc82f3d6ffcac02$var$kClient","$0fc82f3d6ffcac02$var$kProxyHeaders","$0fc82f3d6ffcac02$var$kRequestTls","$0fc82f3d6ffcac02$var$kProxyTls","$0fc82f3d6ffcac02$var$kConnectEndpoint","$0fc82f3d6ffcac02$var$defaultFactory","origin","opts","$0fc82f3d6ffcac02$var$buildProxyOptions","uri","protocol","interceptors","ProxyAgent","Array","isArray","clientFactory","requestTls","proxyTls","headers","resolvedUrl","port","host","username","password","auth","token","Buffer","from","decodeURIComponent","toString","connect","callback","requestedHost","servername","socket","statusCode","path","signal","on","destroy","httpSocket","err","dispatch","handler","$0fc82f3d6ffcac02$var$buildHeaders","headersPair","i","length","$0fc82f3d6ffcac02$var$throwIfProxyAuthIsSent","Object","keys","find","key","toLowerCase","close","default"],"version":3,"file":"python-version-check.c8166846.js.map","sourceRoot":"../"}